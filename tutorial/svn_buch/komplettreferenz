<?xml version="1.0" encoding="iso-8859-1"?>
<!-- Diese Übersetzung basiert auf der englischen Version
mit commited-rev=9183 -->

<chapter>

  <title>Subversion - Komplettreferenz</title>

  <author>
  <name>Ben Collins-Sussman</name>
 </author>
 
 <author>
  <name>Brian W. Fitzpatrick</name>
 </author>
 
 <author>
  <name>C. Michael Pilato</name>
 </author>
 
 <layout>
  <name>Matthias Hagedorn</name>
  <mailto>matthias.hagedorn@selflinux.org</mailto>
 </layout>
 
 <license>GFDL</license>
 
 <index>komplettreferenz</index>


 <description>
Dieses Kapitel hat die Absicht eine komplette Referenz für
Subversion zur Verfügung zu stellen. Dies umfasst den
Kommandozeilen-Client (<command>svn</command>) mit seinen
Subkommandos genauso wie die Administrations-Programme für das
Projektarchiv (<command>svnadmin</command> und
<command>svnlook</command>) mit ihren Subkommandos.
 </description>

<!-- ================================================================= -->
<!-- ======================== SECTION 1 ============================== -->
<!-- ================================================================= -->
 <split>
  <section>
   <heading>
Der Subversion-Kommandozeilen-Client: svn
   </heading>

   <textblock>
Um den Kommandozeilen-Clienten zu benutzen schreiben sie
<command>svn</command>, die Subkommandos die sie benutzen wollen
FOOTNOTEJa, ja, sie brauchen kein Subkommando um den
<command>--version</command> Optionen zu benutzen, aber zu dem
kommen wir in einer Minute. FOOTNOTE, und alle
Optionen oder Ziele mit denen sie arbeiten wollen -- es
gibt keine spezielle Reihenfolge in der die Subkommandos oder
Optionen angeordnet sein müssen.  Alle folgenden Beispiele sind
gültige Möglichkeiten für <command>svn status</command>:
   </textblock>

   <shell>
    <user>
$ svn -v status
    </user>
    <user>
$ svn status -v
    </user>
    <user>
$ svn status -v myfile
    </user>
   </shell>

   <textblock>
Sie können weitere Beispiele für die meisten Client-Befehle
in <xref linkend="svn-ch-3"/> und Befehle zum Verwalten der
Eigenschaften (properties) in <xref linkend="svn-ch-7-sect-2"/>
finden.
   </textblock>
  </section>
 </split>

 <split>
  <section>
   <heading>
svn Optionen
   </heading> 

   <textblock>
Obwohl Subversion verschiedene Optionen für die einzelnen
Subkommandos hat, sind alle Optionen global -- das heisst
jede Option hat immer die gleiche Bedeutung, unabhängig vom
Subkommando mit der sie gerade verwendet wird.  Zum Beispiel
bedeutet <command>--verbose</command> (<command>-v</command>)
immer <italic>geschwätzige Ausgabe</italic>, unabhängig vom
Subkommando mit dem es benutzt wird.
   </textblock>

   <textblock>
    <command>--auto-props</command>
   </textblock>

   <quotation>
Schaltet auto-props ein, überschreibt die
<italic>enable-auto-props</italic> Einstellung der
<path>config</path> Datei.
   </quotation>

   <textblock>
    <command>--config-dir</command>
    <italic>DIR</italic>
   </textblock>

   <quotation>
Weisst Subversion an die Konfiguration vom
angegebenen Verzeichnis zu lesen statt vom
Standard-Verzeichnis (<path>.subversion</path> im
Heimatverzeicnis der BenutzerIn).
   </quotation>

   <textblock>
    <command>--diff-cmd</command>
    <italic>CMD</italic>
   </textblock>
   
   <quotation>
Gibt ein externes Programm an, das verwendet wird um
die Unterschiede zwischen Dateien anzuzeigen.  Wenn
<command>svn diff</command> aufgerufen wird verwendet es
die interne Unterschieds-Methode von Subversion, welche
standardmässig das vereinte Format zur Verfügung stellt.
Wenn sie ein externes Programm benutzen wollen, verwenden
sie <command>--diff-cmd</command>.  Sie können Optionen an
dieses externe Programm mit der
<command>--extensions</command> Option übergeben (mehr dazu
später in diesem Kapitel).
   </quotation>

   <textblock>
    <command>--diff3-cmd</command>
    <italic>CMD</italic>
   </textblock>

   <quotation>
Gibt ein externes Programm an, um Dateien
zusammenzuführen.
   </quotation>

   <textblock>
    <command>--dry-run</command>
   </textblock>

   <quotation>
Durchläuft alle Schritte des Kommandos, ohne jedoch
Änderungen vorzunehmen -- weder lokal noch im
Projektarchiv.
   </quotation>

   <textblock>
    <command>--editor-cmd</command>
    <italic>CMD</italic>
   </textblock>

   <quotation>
Gibt ein externes Programm an, das verwendet wird um
eine Log-Nachricht oder eine Eigenschaft (property) zu
bearbeiten.
   </quotation>

   <textblock>
    <command>--encoding</command>
    <italic>ENC</italic>
   </textblock>

   <quotation>
Teilt Subversion den Zeichensatz mit, der für
Nachrichten verwendet wird.  Standardmässig wird die
Einstellung des Betriebssystems übernommen.  Sie sollten
den Zeichensatz angeben, wenn ihre Nachrichten einen
anderen Zeichensatz verwenden.
   </quotation>

   <textblock>
    <command>--extensions</command> (<command>-x</command>)
    <italic>ARGS</italic>
   </textblock>

   <quotation>
Gibt ein oder mehrere Argumente an, die von
Subversion an ein externes diff Programm weitergegeben
werden sollen, wenn Unterschiede zwischen Datein
festgestellt werden sollen.  Wenn sie mehrere Argumente
übergeben wollen, müssen sie diese mit Anführungszeichen
zusammenfassen.  Zum Beispiel <command>svn diff
--diff-cmd /usr/bin/diff -x "-b -E"</command>).  Diese
Option kann <strong>nur</strong> verwendet werden,
wenn sie auch die <command>--diff-cmd</command> Option
verwenden.
   </quotation>

   <textblock>
    <command>--file</command> (<command>-F</command>)
    <italic>DATEINAME</italic>
   </textblock>

   <quotation>
Verwendet den Inhalt der Datei, deren Name in dieser
Option angegeben wird, für das jeweilige
Subkommando.
   </quotation>

   <textblock>
    <command>--force</command>
   </textblock>

   <quotation>
Erzwingt die Ausführung eines bestimmten Kommandos.
Es gibt einige Operationen, bei welchen Subversion unter
normalen Umständen eine Ausführung verhindert, aber sie
können Subversion mitteilen <italic>Ich weiss was ich
mache und über die möglichen Folgen dessen, also lass
mich</italic>.  Diese Option entspricht einer Arbeit an
der Elektrik mit eingeschaltetem Strom -- wenn sie
nicht wissen, was sie tun werden sie einen
fürchterlichen Schock bekommen.
   </quotation>

   <textblock>
    <command>--force-log</command>
   </textblock>

   <quotation>
Erzwingt die Annahme eines fragwürdigen Quotationmeters,
welcher an die <command>--message</command>
(<command>-m</command>) oder <command>--file</command>
(<command>-F</command>) Option übergeben wird.
Standardmässig wird Subversion einen Fehler erzeugen
wenn Quotationmeter an diese Optionen ausschauen, als ob sie
Ziele des Subkommandos wären.  Zum Beispiel, wenn sie
eine Datei die unter Versionskontrolle steht an die
<command>--file</command> (<command>-F</command>) Option,
übergeben wird Subversion annehmen, dass sie einen
Fehler gemacht haben und dass die Angabe stattdessen als
Ziel der Operation gedacht war und dass sie einfach
vergessen haben eine andere -- nicht unter
Versionskontrolle stehende -- Datei als
Eingabequelle für ihre Log-Nachricht anzugeben.  Um ihre
Absicht zu bekräftigen und um diese Art von
Fehlermeldung zu umgehen geben sie die
<command>--force-log</command> Option bei Kommandos an
welche Log-Nachrichten akzeptieren.
   </quotation>
   
   <textblock>
    <command>--help</command> (<command>-h</command> or <command>-?</command>)
   </textblock>
   
   <quotation>
Wenn diese Option mit einem oder mehreren
Subkommandos verwendet wird, dann wird die eingebaute
Hilfe für jedes Subkommando angezeigt.  Wenn sie Option
alleine benutzt wird, dann wird ein allgemeiner
Hilfe-Text des Client angezeigt.
   </quotation>

   <textblock>
    <command>--ignore-ancestry</command>
   </textblock>

   <quotation>
Ignoriert die Abstammung einer Datei, wenn
Unterschiede ermittelt werden (zieht nur den Inhalt zur
Ermittlung der Unterschiede heran).
   </quotation>

   <textblock>
    <command>--incremental</command>
   </textblock>

   <quotation>
Verwendet ein Ausgabeformat, das zur Verkettung
geeignet ist.
    </quotation>

    <textblock><command>--message</command> (<command>-m</command>)
     <italic>MESSAGE</italic>
    </textblock>

   <quotation>
Erfordert, dass sie eine nach dieser Option eine
Nachricht auf der Kommandozeile angeben. Zum
Beispiel:
   </quotation>

   <shell>
    <user>
svn commit -m "Hier steht eine wichtige Information."
    </user>
   </shell>

   <textblock>
    <command>--new</command>
    <italic>ARG</italic>
   </textblock>

   <quotation>
Verwende <italic>ARG</italic> als neueres Ziel.
   </quotation>
   
   <textblock>
    <command>--no-auth-cache</command>
   </textblock>

   <quotation>
Verhindert das Zwischenspeichern von
Authentifizierungsinformationen (z.B. Benutzername und
Passwort) in den administrativen Verzeichnissen von
Subversion .
   </quotation>

   <textblock>
    <command>--no-auto-props</command>
   </textblock>
   
   <quotation>
Schaltet auto-props ab. Überschreibt die
<italic>enable-auto-props</italic> Direktive aus der
<path>config</path> Datei.
   </quotation>

   <textblock>
    <command>--no-diff-deleted</command>
   </textblock>

   <quotation>
Verhindert, dass Subversion Differenzen für
gelöschte Dateien ausgibt. Das Standardverhalten für
<command>svn diff</command> bei gelöschten Dateien ist,
dass die Unterschiede so ausgegeben werden, als wenn die
Datei vorhanden, aber leer wäre.
   </quotation>

   <textblock>
    <command>--no-ignore</command>
   </textblock>

   <quotation>
Zeigt Dateien in der Statusanzeige, die
normalerweise weggelassen würden, weil sie auf ein
Muster in der svn:ignore Eigenschaft passen. Siehe auch
<xref linkend="svn-ch-7-sect-1.3.2"/>.
   </quotation>

   <textblock>
    <command>--non-interactive</command>
   </textblock>

   <quotation>
Verhindert im Falle eines Authentifizierungs-Fehlers
oder unzureichender Berechtigungen dass
Berechtigungsinformationen (z.B. Benutzername und
Passwort) angefordert werden.  Das ist hilfreich, wenn
Subversion in einem automatischen Stapel läuft und ein
scheitern von Subversion sinnvoller ist, als dass
zusätzliche Informationen angefordert werden.
   </quotation>

   <textblock>
    <command>--non-recursive</command> (<command>-N</command>)
   </textblock>

   <quotation>
Hält ein Subkommando davon ab die Unterverzeichnisse
rekursiv abzuarbeiten.  Die meisten Subkommandos
durchlaufen standardmässig alle Unterverzeichnisse, aber
einige -- vor allem solche, die möglicherweise
lokale Änderungen entfernen oder rückgängig machen
-- tun dies nicht.
   </quotation>

   <textblock>
    <command>--notice-ancestry</command>
   </textblock>

   <quotation>
Berücksichtige die Abstammung, wenn Unterschiede
ermittelt werden.
   </quotation>

   <textblock>
    <command>--old</command>
    <italic>ARG</italic>
   </textblock>

   <quotation>
Verwende <italic>ARG</italic> als älteres Ziel.
   </quotation>

   <textblock>
    <command>--password</command>
    <italic>PASS</italic>
   </textblock>

   <quotation>
Erfordert, dass sie ihr Passwort zur
Authentifizierung auf der Kommandozeile angeben --
andernfalls wird Subversion danach fragen.
   </quotation>

   <textblock>
    <command>--quiet</command> (<command>-q</command>)
   </textblock>

   <quotation>
Weist das Programm an nur unverzichtbare
Infomationen während der Ausführung einer Operationen
anzuzeigen.
   </quotation>

   <textblock>
    <command>--recursive</command> (<command>-R</command>)
   </textblock>

   <quotation>
Weist ein Subkommando an die Unterverzeichnisse mit
einzubeziehen. Die meisten Subkommandos machen dies
standardmässig.
   </quotation>

   <textblock>
    <command>--relocate</command> <italic>FROM TO
     [PATH...]</italic>
   </textblock>

   <quotation>
Wird mit dem <command>svn switch</command>
Subkommando benutzt und wechselt die Ortsangabe des
Projektarchives auf den die Arbeitskopie verweist.  Das
ist hilfreich, wenn sich der Ort des Projektarchives
ändert und sie eine bestehende Arbeitskopie haben, die
sie weiterverwenden wollen.  Siehe Beispiel unter
<command>svn switch</command>.
   </quotation>

   <textblock>
    <command>--revision</command> (<command>-r</command>)
    <italic>REV</italic>
   </textblock>
   
   <quotation>
Legt fest, dass sie eine Revision (oder einen
Bereich von Revisionen) für eine bestimmte Operation
verwenden wollen.  Sie können Nummern, Schlüsselwörter
oder Datumsangaben (in geschwungenen Klammern) als
Argument für die Revisions-Option übergeben.  Wenn sie
einen Bereich von Revisionen verwenden wollen, können
sie zwei Revisionen getrennt durch einen Doppelpunkt
angeben. Zum Beispiel:
   </quotation>

   <shell>
    <user>
svn log -r 1729
    </user>
    <user>
svn log -r 1729:HEAD
    </user>
    <user>
svn log -r 1729:1744
    </user>
    <user>
svn log -r {2001-12-04}:{2002-02-17}
    </user>
    <user>
svn log -r 1729:{2002-02-17}
    </user>
   </shell>

   <quotation>
See <xref linkend="svn-ch-3-sect-3.2"/> for more
information.
   </quotation>

   <textblock>
    <command>--revprop</command>
   </textblock>

    <quotation>
Arbeitet mit einer Eigenschaft für Revisionen
anstatt mit einer für Dateien oder Verzeichnisse
spezifischen Eigenschaft.  Diese Option erfordert, dass
sie auch eine Revision mit der
<command>--revision</command> (<command>-r</command>) Option
angeben. Siehe <xref linkend="svn-ch-5-sect-1.2"/> für
mehr Details über Eigenschaften, die nicht der
Versionskontrolle unterliegen.
   </quotation>

   <textblock>
    <command>--show-updates</command> (<command>-u</command>)
   </textblock>

   <quotation>
Veranlasst den Client die Dateien der Arbeitskopie
anzuzeigen, die nicht am neuesten Stand sind.  Es werden
keine Dateien aktualisiert -- es zeigt nur an,
welche Dateien aktualisiert werden, wenn sie
<command>svn update</command> ausführen.
   </quotation>

   <textblock>
    <command>--stop-on-copy</command>
   </textblock>

   <quotation>
Veranlasst ein Subkommando welches die Geschichte
einer Einheit, die unter Versionskontrolle steht,
durchläuft das Sammeln der Informationen einzustellen,
wenn es auf eine Kopie trifft.  Das ist dann, wenn die
Einheit von einer Stelle im Projektarchiv an eine andere
Stelle kopiert wurde.
   </quotation>

   <textblock>
    <command>--strict</command>
   </textblock>

   <quotation>
Veranlasst Subversion eine strikte Semantik
einzuhalten -- eine ziemlich unklare Aussage,
solange wir nicht ein bestimmtes Subkommando
behandeln.
   </quotation>

   <textblock>
    <command>--targets</command>
    <italic>DATEINAME</italic>
   </textblock>

   <quotation>
Weist Subversion an eine Liste von Dateinamen aus
der angegebenen Datei zu holen, anstatt die Liste mit
den Dateinamen auf der Kommandozeile anzuführen.
   </quotation>

   <textblock>
    <command>--username</command> <italic>NAME</italic>
   </textblock>

   <quotation>
Damit können sie ihren Benutzernamen für die
Authentifizierung auf der Kommandozeile angeben --
andernfalls wird Subversion sie bei Bedarf danach
fragen.
   </quotation>
   
   <textblock>
    <command>--verbose</command> (<command>-v</command>)
   </textblock>

   <quotation>
Weist den Client an so viel Information wie möglich
bei der Ausführung eines Subkommandos auszugeben.  Dies
kann bedeuten, dass zusätzliche Felder, detailiertere
Information über jede Datei oder zusätzliche Information
abhängig von der jeweiligen Aktion angezeigt
werden.
   </quotation>

   <textblock>
    <command>--version</command>
   </textblock>

   <quotation>
Zeigt die Version des Client an.  Diese Information
beinhaltet nicht nur die Versionsnummer des Client,
sondern auch alle Projektarchiv-Zugriffsmodule die das
Programm beherrscht.
   </quotation>

   <textblock>
    <command>--xml</command>
   </textblock>

   <quotation>
Formatiert die Ausgabe als XML.
   </quotation>
  </section>
 </split>
  
<!-- =========================================================== -->
 <split>
  <section>
   <heading>
svn Subcommands
   </heading>
    
<!-- =========================================================== -->

   <section>
    <heading>
svn add
    </heading>
     
    <textblock>
     <strong>Name</strong>
    </textblock>

    <textblock>
     <command><strong>svn add</strong></command> -- Fügt Dateien und Verzeichnisse hinzu
    </textblock>

    <textblock>
     <strong>Übersicht</strong>
    </textblock>
    
    <quotation>
     <command>svn add PATH...</command>
    </quotation>
    
    <textblock>
     <strong>Beschreibung</strong>
    </textblock>

    <textblock>
Fügt Dateien und Verzeichnisse zu ihrer Arbeitskopie
hinzu und merkt diese für das Hinzufügen zum Projektarchiv
vor.  Diese Dateien und Verzeichnisse werden beim nächsen
übertragen in das Projektarchiv eingefügt.  Wenn sie etwas
hinzugefügt haben und sie ändern ihre Meinung vor dem
Übertragen können sie dies mittels <command>svn
revert</command> wieder rückgängig machen.
    </textblock>

    <textblock>
     <strong>Alternative Namen</strong>
    </textblock>
    
    <textblock>
Keine
    </textblock>

    <textblock>
     <strong>Ändert</strong>
    </textblock>

    <textblock>
Arbeitskopie
    </textblock>
    
    <textblock>
     <strong>Optionen</strong>
    </textblock>
    
    <quotation>
     <command>--targets DATEINAME</command><br/>
     <command>--non-recursive (-N)</command><br/>
     <command>--quiet (-q)</command><br/>
     <command>--config-dir DIR</command><br/>
     <command>--auto-props</command><br/>
     <command>--no-auto-props</command><br/>
    </quotation>

    <textblock>
     <strong>Beispiele</strong>
    </textblock>

    <textblock>
Um eine Datei zu ihrer Arbeitskopie hinzuzugügen:
    </textblock>

    <shell>
     <user>
svn add foo.c
     </user>
     <output>
A         foo.c
     </output>
    </shell>

    <textblock>
Wenn sie ein Verzeichnis hinzufügen werden bei
<command>svn add</command> standardmässig auch die
Unterverzeichnisse einbezogen:
    </textblock>

    <shell>
     <user>
svn add testdir
     </user>
     <output>
A         testdir
A         testdir/a
A         testdir/b
A         testdir/c
A         testdir/d
     </output>
    </shell>

    <textblock>
Sie können auch ein Verzeichnis ohne dessen Dateien
hinzufügen:
    </textblock>

    <shell>
     <user>
svn add --non-recursive anderesverz
     </user>
     <output>
A         anderesverz
     </output>
    </shell>
   </section>
    
<!-- ================================================================= -->

   <section>
    <heading>
svn blame
    </heading>

    <textblock>
     <strong>Name</strong>
    </textblock>

    <textblock>
<command><strong>svn blame</strong></command> --  Zeigt Information
über AutorIn und Revision in einer Zeile mit den
Dateinamen für die angegebenen Dateien oder
URLs.
    </textblock>

    <textblock>
     <strong>Übersicht</strong>
    </textblock>
    
    <quotation>
     <command>svn blame ZIEL...</command>
    </quotation>

    <textblock>
     <strong>Beschreibung</strong>
    </textblock>
    
    <textblock>
Zeigt Angaben über AutorIn und Revision in der
Zeileninformation für die angegebenen Dateien oder URLs.
Jede Textzeile enthält am Beginn die Angabe über AutorIn
(Benutzername) und die Revisionsnummer der letzten
Änderung für diese Zeile.
    </textblock>

    <textblock>
     <strong>Alternative Namen</strong>
    </textblock>
    
    <textblock>
praise, annotate, ann
    </textblock>

    <textblock>
     <strong>Ändert</strong>
    </textblock>

    <textblock>
Nichts
    </textblock>

    <textblock>
     <strong>Archivzugriff</strong>
    </textblock>
    
    <textblock>
Ja
    </textblock>

    <textblock>
     <strong>Optionen</strong>
    </textblock>

    <quotation>
     <command>--revision (-r) REV</command><br/>
     <command>--username USER</command><br/>
     <command>--password PASS</command><br/>
     <command>--no-auth-cache</command><br/>
     <command>--non-interactive</command><br/>
     <command>--config-dir DIR</command><br/>
    </quotation>

    <textblock>
     <strong>Beispiele</strong>
    </textblock>

    <textblock>
Wenn sie die Zuständigkeit für den Text in readme.txt
in ihrem Projektarchiv test sehen wollen:
    </textblock>
    
    <shell>
     <user>
svn blame http://svn.red-bean.com/repos/test/readme.txt
     </user>
     <output>
3      sally Das ist eine README Datei.
5      harry Sie sollten das lesen.
     </output>
    </shell>
   </section>
    
<!-- ================================================================= -->

   <section>
    <heading>
svn cat
    </heading>
     
    <textblock>
     <strong>Name</strong>
    </textblock>

    <textblock>
<command><strong>svn cat</strong></command> -- Gibt den Inhalt der angegebenen Dateien oder
URLs aus.
    </textblock>

    <textblock>
     <strong>Übersicht</strong>
    </textblock>
    
    <quotation>
     <command>svn cat ZIEL...</command>
    </quotation>
    
    <textblock>
     <strong>Beschreibung</strong>
    </textblock>

    <textblock>
Gibt den Inhalt der angegebenen Dateien oder URLs aus.
Für den Inhalt von Verzeichnissen siehe <command>svn
list</command>.
    </textblock>

    <textblock>
     <strong>Alternative Namen</strong>
    </textblock>

    <textblock>
Keine
    </textblock>

    <textblock>
     <strong>Ändert</strong>
    </textblock>

    <textblock>
Nichts
    </textblock>

    <textblock>
     <strong>Archivzugriff</strong>
    </textblock>

    <textblock>
Ja
    </textblock>

    <textblock>
     <strong>Optionen</strong>
    </textblock>

    <quotation>
     <command>--revision (-r) REV</command><br/>
     <command>--username USER</command><br/>
     <command>--password PASS</command><br/>
     <command>--no-auth-cache</command><br/>
     <command>--non-interactive</command><br/>
     <command>--config-dir DIR</command><br/>
    </quotation>
    
    <textblock>
     <strong>Beispiele</strong>
    </textblock>

    <textblock>
Wenn sie die Datei <path>readme.txt</path> in ihrem Projektarchiv
anschauen wollen, ohne die Datei auszuchecken:
    </textblock>

    <shell>
     <user>
svn cat http://svn.red-bean.com/repos/test/readme.txt
     </user>
     <output>
Das ist eine README Datei.
Sie sollten das lesen.
     </output>
    </shell>

    <hint>
Wenn ihre Arbeistkopie nicht am neuesten Stand ist
(oder sie haben lokale Veränderungen vorgenommen) und
sie wollen die <italic>HEAD</italic> Revision einer
Datei aus ihrer Arbeitskopie sehen, dann wird
<command>svn cat</command> automatisch die
<italic>HEAD</italic> Revision holen:
    </hint>

    <shell>
     <user>
cat foo.c
     </user>
     <output>
Diese Datei ist meine lokale Arbeitskopie
und wurde von mir verändert.
     </output>
     <user>
svn cat foo.c
     </user>
     <output>
Letzte Revision frisch vom Projektarchiv!
     </output>
    </shell>
   </section>

<!-- ================================================================= -->

   <section>
    <heading>
svn checkout
    </heading>
    
    <textblock>
     <strong>Name</strong>
    </textblock>

    <textblock>
     <command><strong>svn checkout</strong></command> -- Checkt eine Arbeitskopie vom Projektarchiv aus.
    </textblock>

    <textblock>
     <strong>Übersicht</strong>
    </textblock>
     
    <quotation>
     <command>svn checkout URL... [PATH]</command>
    </quotation>

    <textblock>
     <strong>Beschreibung</strong>
    </textblock>

    <textblock>
Checkt eine Arbeitskopie vom Projektarchiv aus. Wenn
<italic>PATH</italic> fehlt, wird der Basisname
(letzter Teil) der URL als Ziel verwendet. Wenn mehrere
URLs angegeben werden wird jede in ein eigenes
Unterverzeichnis von PATH gelegt wobei der Basisnamen der
URL als Namen für das Unterverzeichnis verwendet
wird.
    </textblock>

    <textblock>
     <strong>Alternative Namen</strong>
    </textblock>
     
    <textblock>
<command>co</command>
    </textblock>

    <textblock>
     <strong>Ändert</strong>
    </textblock>

    <textblock>
Erstellt eine neue Arbeitskopie.
    </textblock>
    
    <textblock>
     <strong>Archivzugriff</strong>
    </textblock>

    <textblock>
Ja
    </textblock>

    <textblock>
     <strong>Optionen</strong>
    </textblock>

    <quotation>
     <command>--revision (-r) REV</command><br/>
     <command>--quiet (-q)</command><br/>
     <command>--non-recursive (-N)</command><br/>
     <command>--username USER</command><br/>
     <command>--password PASS</command><br/>
     <command>--no-auth-cache</command><br/>
     <command>--non-interactive</command><br/>
     <command>--config-dir DIR</command><br/>
    </quotation>

    <textblock>
     <strong>Beispiele</strong>
    </textblock>

    <textblock>
Checkt eine Arbeitskopie in das Verzeichnis <path>mein</path> aus:
    </textblock>

    <shell>
     <user>
svn checkout file:///tmp/repos/test mein</user>
     <output>
A  mein/a
A  mein/b
Revision 2 ausgecheckt.
     </output>
     <user>
ls
     </user>
     <output>
mine
     </output>
    </shell>

    <textblock>
Checkt 2 verschiedene Verzeichnisse in zwei getrennte
Arbeitskopien aus:
    </textblock>

    <shell>
     <user>
svn checkout file:///tmp/repos/test  file:///tmp/repos/quiz</user>
     <output>
A  test/a
A  test/b
Revision 2 ausgecheckt.
A  quiz/l
A  quiz/m
Revision 2 ausgecheckt.
     </output>
     <user>
ls
     </user>
     <output>
quiz  test
     </output>
    </shell>

    <textblock>
Checkt 2 verschiedene Verzeichnisse in zwei getrennte
Arbeitskopien aus und stellt diese in das Verzeichnis
<path>arbeitskopien</path>:
    </textblock>
    
    <shell>
     <user>
svn checkout file:///tmp/repos/test  file:///tmp/repos/quiz arbeitskopien
     </user>
     <output>
A  arbeitskopien/test/a
A  arbeitskopien/test/b
Revision 2 ausgecheckt.
A  arbeitskopien/quiz/l
A  arbeitskopien/quiz/m
Revision 2 ausgecheckt.
     </output>
     <user>
ls
     </user>
     <output>
arbeitskopien
     </output>
    </shell>

    <textblock>
Wenn sie ein auschecken unterbrechen (oder das
auschecken durch irgendetwas anderes unterbrochen wird,
wie z.B. ein Zusammenbruch der Verbindung, etc.), können
sie dieses fortsetzen, indem sie entweder das gleiche
<command>checkout</command> Kommando wiederholen oder indem sie die
unvollständige Arbeitskopie mit <command>update</command> auf den letzten
Stand bringen.
    </textblock>

    <shell>
     <user>
svn checkout file:///tmp/repos/test test A test/a A test/b ^C svn:
     </user>
     <output>
The operation was interrupted svn: caught SIGINT
     </output>
     <user>
svn checkout file:///tmp/repos/test test
     </user>
     <output>
A  test/c
A  test/d
^C
svn: The operation was interrupted
svn: caught SIGINT
     </output>
     <user>
cd test
     </user>
     <user>
svn update
     </user>
     <output>
A  test/e
A  test/f
Aktualisiert auf Revision 3.
     </output>
    </shell>
   </section>

<!-- ================================================================= -->

   <section>
    <heading>
svn cleanup
    </heading>

    <textblock>
     <strong>Name</strong>
    </textblock>
     
    <textblock>
     <command><strong>svn cleanup</strong></command> -- Säubert die Arbeitskopie rekursiv.
    </textblock>

    <textblock>
     <strong>Übersicht</strong>
    </textblock>
     
    <quotation>
     <command>svn cleanup [PATH...]</command>
    </quotation>

    <textblock>
     <strong>Beschreibung</strong>
    </textblock>

    <textblock>
Säubert die Arbeitskopie rekursiv, entfernt Sperren
und setzt unvollständige Operationen fort.  Wenn sie
jemals einen <italic>working copy locked</italic> Fehler
bekommen, sollten sie dieses Kommando ausführen um
hängengebliebene Sperren zu beseitigen und um die
Arbeitskopie wieder in einen brauchbaren Zustand zu
bringen.  Siehe auch <xref linkend="svn-ap-b"/>.
    </textblock>

    <textblock>
Wenn, aus welchem Grund auch immer, ein <command>svn
update</command> wegen einem Problem mit einem externen
diff Program (z.B. Eingabefehler oder Netzwerkprobleme)
fehlgeschlagen ist, dann müssen sie hier die
<command>--diff3-cmd</command> angeben um cleanup die
Möglichkeit zu geben das Zusammenführen mit dem externen
diff Programm fortzusetzen.  Sie können auch jedes
Konfigurations-Verzeichnis mit der
<command>--config-dir</command> Option angeben, aber sie
sollten diese Optionen extrem selten benötigen.
    </textblock>

    <textblock>
     <strong>Alternative Namen</strong>
    </textblock>
     
    <textblock>
Keine
    </textblock>

    <textblock>
     <strong>Ändert</strong>
    </textblock>

    <textblock>
Arbeitskopie
    </textblock>

    <textblock>
     <strong>Archivzugriff</strong>
    </textblock>

    <textblock>
Nein
    </textblock>

    <textblock>
     <strong>Optionen</strong>
    </textblock>
    
    <quotation>
     <command>--diff3-cmd CMD</command><br/>
     <command>--config-dir DIR</command><br/>
    </quotation>

    <textblock>
     <strong>Beispiele</strong>
    </textblock>
    
    <textblock>
Nun, da ist nicht viel zu zeigen, weil <command>svn
cleanup</command> keine Ausgaben erzeugt.  Wenn sie keinen
PATH angeben wird, <path>.</path>
verwendet.
    </textblock>
     
    <shell>
     <user>
svn cleanup
     </user>
     <user>
svn cleanup /path/to/working-copy
     </user>
    </shell>
   </section>

<!-- ================================================================= -->
   
   <section>
    <heading>
svn commit
    </heading>
     
    <textblock>
     <strong>Name</strong>
    </textblock>
     
    <textblock>
     <command><strong>svn commit</strong></command> -- Überträgt Änderungen ihrer Arbeitskopie an das Projektarchiv.
    </textblock>

    <textblock>
     <strong>Übersicht</strong>
    </textblock>
     
    <quotation>
     <command>svn commit [PATH...]</command>
    </quotation>

    <textblock>
     <strong>Beschreibung</strong>
    </textblock>

    <textblock>
Überträgt Änderungen ihrer Arbeitskopie an das
Projektarchiv.  Wenn sie keine Log-Nachricht angeben,
indem sie entweder die <command>--file</command> oder
<command>--message</command> Option benutzen wird
<command>svn</command> ihren Editor aufrufen und sie
auffordern eine Log-Nachricht zu erstellen.  Siehe
Abschnitt <italic>editor-cmd</italic> in <xref
linkend="svn-ch-7-sect-1.3.2"/>.
    </textblock>

    <hint>
Wenn sie eine Übertragung beginnen und Subversion
ruft den Editor auf um eine Nachricht zu erstellen,
können sie noch immer abbrechen, ohne ihre Änderungen zu
übertragen.  Wenn sie die Übertragung abbrechen wollen,
dann brauchen sie nur den Editor beenden, ohne ihre
Log-Nachricht abzuspeichern und Subversion wird
nachfragen, was sie machen wollen: entweder die
Übertragung abbrechen, fortsetzen ohne eine
Log-Nachricht anzugeben oder die Log-Nachricht nochmals
bearbeiten.
    </hint>

    <textblock>
     <strong>Alternative Namen</strong>
    </textblock>
     
    <textblock>
<command>ci</command> (kurz für <italic>check in</italic> nicht 
<italic>co</italic>, welches das Kürzel für  
<italic>checkout</italic> ist)
    </textblock>

    <textblock>
     <strong>Ändert</strong>
    </textblock>

    <textblock>
Arbeitskopie, Projektarchiv
    </textblock>

    <textblock>
     <strong>Archivzugriff</strong>
    </textblock>
     
    <textblock>
Ja
    </textblock>

    <textblock>
     <strong>Optionen</strong>
    </textblock>

    <quotation>
     <command>--message (-m) TEXT</command><br/>
     <command>--file (-F) DATEI</command><br/>
     <command>--quiet (-q)</command><br/>
     <command>--non-recursive (-N)</command><br/>
     <command>--targets DATEINAME</command><br/>
     <command>--force-log</command><br/>
     <command>--username USER</command><br/>
     <command>--password PASS</command><br/>
     <command>--no-auth-cache</command><br/>
     <command>--non-interactive</command><br/>
     <command>--encoding ENC</command><br/>
     <command>--config-dir DIR</command><br/>
    </quotation>

    <textblock>
     <strong>Beispiele</strong>
    </textblock>

    <textblock>
Überträgt eine einfache Änderung einer Datei mit der
Log-Nachricht auf der Kommandozeile und dem aktuellen
Verzeichnis (<path>.</path>) als
impliziten Ziel:
    </textblock>

    <shell>
     <user>
svn commit -m "Howto-Abschnitt eingefügt."
     </user>
     <output>
Sending        a
Transmitting file data .
Committed revision 3.
     </output>
    </shell>

    <textblock>
Überträgt eine Änderung in der Datei
<path>foo.c</path> (explicit angegeben auf der
Kommandozeile) mit der Log-Nachricht aus der Datei
<italic>msg</italic>:
    </textblock>

    <shell>
     <user>
svn commit -F msg foo.c
     </user>
     <output>
Sending        foo.c
Transmitting file data .
Committed revision 5.
     </output>
    </shell>

    <textblock>
Wenn sie eine Datei, die unter Versionskontrolle steht
für ihre Log-Nachricht mit der <command>--file</command>
Option verwenden wollen, müssen sie die
<command>--force-log</command> Option angeben:
    </textblock>

    <shell>
     <user>
svn commit --file datei_unter_vk.txt foo.c
     </user>
     <output>
svn: The log message file is under version control
svn: Log message file is a versioned file; use '--force-log' to override
     </output>
     <user>
svn commit --force-log --file datei_unter_vk.txt foo.c
     </user>
     <output>
Sending        foo.c
Transmitting file data .
Committed revision 6.
     </output>
    </shell>

    <textblock>
Um die vorgemerkte Löschung einer Datei zu übertragen:
    </textblock>

    <shell>
     <user>
svn commit -m "Ich entfernte Datei 'c'."
     </user>
     <output>
Deleting       c

Committed revision 7.
     </output>
    </shell>
   </section>

<!-- ================================================================= -->

   <section>
    <heading>
svn copy
    </heading>
    
    <textblock>
     <strong>Name</strong>
    </textblock>

    <textblock>
<command><strong>svn copy</strong></command> -- Kopiert eine Datei oder Verzeichnis in einer
Arbeitskopie oder im Projektarchiv.
    </textblock>

    <textblock>
     <strong>Übersicht</strong>
    </textblock>

    <quotation>
     <command>svn copy QUELLE ZIEL</command>
    </quotation>

    <textblock>
     <strong>Beschreibung</strong>
    </textblock>

    <textblock>
Kopiert eine Datei in einer Arbeitskopie oder im Projektarchiv.
<italic>QUELLE</italic> und
<italic>ZIEL</italic> können entweder eine
Arbeitskopie (AK) oder eine URL sein:
    </textblock>

    <textblock>
AK  -&gt; AK
    </textblock>

    <quotation>
Kopieren und zum Hinzufügen vormerken 
(inclusive Historie).
    </quotation>

    <textblock>
AK  -&gt; URL
    </textblock>

    <quotation>
Sofort eine Kopie von AK nach URL übertragen.
    </quotation>

    <textblock>
URL -&gt; AK
    </textblock>

    <quotation>
Eine Kopie von URL nach AK auschecken und zum Hinzufügen vormerken.
    </quotation>

    <textblock>
URL -&gt; URL
    </textblock>

    <quotation>
Vollständig serverseitige Kopie.  Dies wird
üblicherweise für Verzweigung (branch) und
Markerung (tag) verwendet.
    </quotation>

    <hint>
Sie können Dateien nur innerhalb eines
Projektarchives kopieren.  Subversion hat keine
Unterstützung für das Kopieren zwischen
Projektarchiven.
    </hint>

    <textblock>
     <strong>Alternative Namen</strong>
    </textblock>
     
    <textblock>
<command>cp</command>
    </textblock>

    <textblock>
     <strong>Ändert</strong>
    </textblock>

    <textblock>
Projektarchiv, wenn ZIEL eine URL ist.
    </textblock>
     
    <textblock>
Arbeitskopie, wenn Ziel eine Arbeitskopie ist.
    </textblock>

    <textblock>
     <strong>Archivzugriff</strong>
    </textblock>
     
    <textblock>
Wenn Quelle oder Ziel im Projektarchiv ist oder wenn es
erforderlich ist die Quell-Revisionsnummer zu ermitteln.
    </textblock>

    <textblock>
     <strong>Optionen</strong>
    </textblock>
    
    <quotation>
     <command>--message (-m) TEXT</command><br/>
     <command>--file (-F) DATEI</command><br/>
     <command>--revision (-r) REV</command><br/>
     <command>--quiet (-q)</command><br/>
     <command>--username USER</command><br/>
     <command>--password PASS</command><br/>
     <command>--no-auth-cache</command><br/>
     <command>--non-interactive</command><br/>
     <command>--force-log</command><br/>
     <command>--editor-cmd EDITOR</command><br/>
     <command>--encoding ENC</command><br/>
     <command>--config-dir DIR</command><br/>
    </quotation>

    <textblock>
     <strong>Beispiele</strong>
    </textblock>

    <textblock>
Kopiert ein Objekt innerhalb ihrer Arbeitskopie (die
lokale Kopie wird sofort erstellt -- für das
Projektarchiv wird die Aktion nur vorgemerkt und erst
durchgeführt, wenn sie die lokalen Änderungen
übertragen):
    </textblock>

    <shell>
     <user>
svn copy foo.txt bar.txt
     </user>
     <output>
A         bar.txt
     </output>
     <user>
svn status
     </user>
     <output>
A  +   bar.txt
     </output>
    </shell>

    <textblock>
Kopiert ein Objekt von ihrer Arbeitskopie zu einer URL
im Projektarchiv (wird sofort übertragen, daher muss eine
Log-Nachricht angegeben werden):
    </textblock>

    <shell>
     <user>
svn copy hier.txt file:///tmp/repos/test/weit-weg.txt -m "Langstrecken-Kopie."
     </user>
     <output>
Committed revision 8.
     </output>
    </shell>

    <textblock>
Kopiert ein Objket vom Projektarchiv in die lokale
Arbeitskopie (die lokale Kopie wird sofort erstellt
-- für das Projektarchiv wird die Aktion nur
vorgemerkt und erst durchgeführt, wenn sie die lokalen
Änderungen übertragen):
    </textblock>
    
    <hint>
Das ist die empfohlene Vorgangsweise um tote Dateien
im Projektarchiv wiederzubeleben!
    </hint>

    <shell>
     <user>
svn copy file:///tmp/repos/test/weit-weg hier
     </user>
     <output>
A         hier
     </output>
    </shell>

    <textblock>
Und zum Abschluss das Kopieren zwischen zwei URLs:
    </textblock>

    <shell>
     <user>
svn copy file:///tmp/repos/test/weit-weg file:///tmp/repos/test/da-hinueber -m "Tele-Kopie."
     </user>
     <output>
Committed revision 9.
     </output>
    </shell>

    <hint>
Das ist der einfachste Weg um eine Revision in ihrem
Projektarchiv mit einer <italic>Marke</italic> (tag) zu
versehen -- kopieren sie diese Revision
(üblicherweise <italic>HEAD</italic>) einfach mit
<command>svn copy</command> in ihr tags
Verzeichnis.
    </hint>

    <shell>
     <user>
svn copy file:///tmp/repos/test/trunk file:///tmp/repos/test/tags/0.6.32-prerelease -m "markierter Zweig"
     </user>
     <output>
Committed revision 12.
     </output>
    </shell>

    <textblock>
Und machen sie sich keine Sorgen, wenn sie auf das
Erstellen der Markierung vergessen haben -- sie
können immer eine ältere Revision angeben und die
Markierung jederzeit nachholen:
    </textblock>

    <shell>
     <user>
svn copy -r 11 file:///tmp/repos/test/trunk file:///tmp/repos/test/tags/0.6.32-prerelease -m "Vergass Marke zu Rev 11"
     </user>
     <output>
Committed revision 13.
     </output>
    </shell>
   </section>
     
<!-- ================================================================= -->

   <section>
    <heading>
svn delete
    </heading>
     
    <textblock>
     <strong>Name</strong>
    </textblock>
    
    <textblock>
<command><strong>svn delete</strong></command>  -- Löscht ein Objekt aus der Arbeitskopie oder dem 
Projektarchiv.
    </textblock>

    <textblock>
     <strong>Übersicht</strong>
    </textblock>
     
    <quotation>
     <command>svn delete PFAD...</command>
    </quotation>

    <quotation>
     <command>svn delete URL...</command>
    </quotation>

    <textblock>
     <strong>Beschreibung</strong>
    </textblock>

    <textblock>
Objekte, die über <italic>PFAD</italic>
angesprochen werden, werden für das Löschen bei der
nächsten Übertragung vorgemerkt.  Dateien (und
Verzeichnisse, die noch nicht übertragen wurden) werden
sofort von der Arbeitskopie entfernt.  Das Kommando wird
Datein, die nicht unter Versionskontrolle stehen oder die
verändert wurden nicht löschen. Verwenden sie die
<command>--force</command> Option um dieses Verhalten zu
ändern.
    </textblock>

    <textblock>
Objekte die über URL angesprochen werden, werden bei
der nächsten Übertragung im Projektarchiv entfernt.
Mehrfache URL Angaben werden jede für sich
übertragen.
    </textblock>

    <textblock>
     <strong>Alternative Namen</strong>
    </textblock>

    <textblock>
     <command>del</command>, <command>remove</command>, <command>rm</command>
    </textblock>

    <textblock>
     <strong>Ändert</strong>
    </textblock>
     
    <textblock>
Arbeitskopie, wenn die Operation mit Dateiangaben durchgeführt wird.
    </textblock>
    
    <textblock>
Projektarchiv, wenn die Operation mit URLs durchgeführt wird.
    </textblock>

    <textblock>
     <strong>Archivzugriff</strong>
    </textblock>

    <textblock>
Nur wenn die Operation mit URLs durchgeführt wird
    </textblock>

    <textblock>
     <strong>Optionen</strong>
    </textblock>

    <quotation>
     <command>--force</command><br/>
     <command>--force-log</command><br/>
      <command>--message (-m) TEXT</command><br/>
     <command>--file (-F) DATEI</command><br/>
     <command>--quiet (-q)</command><br/>
     <command>--targets DATEINAME</command><br/>
     <command>--username USER</command><br/>
     <command>--password PASS</command><br/>
     <command>--no-auth-cache</command><br/>
     <command>--non-interactive</command><br/>
     <command>--editor-cmd EDITOR</command><br/>
     <command>--encoding ENC</command><br/>
     <command>--config-dir DIR</command><br/>
    </quotation>

    <textblock>
     <strong>Beispiele</strong>
    </textblock>

    <textblock>
Verwenden sie <command>svn delete</command> um eine
Datei von ihrer Arbeitskopie zu löschen -- für das
Projektarchiv wird die Aktion nur vorgemerkt und erst
durchgeführt, wenn sie die lokalen Änderungen
übertragen.
    </textblock>

    <shell>
     <user>
svn delete meinedatei
     </user>
     <output>
D         meinedatei
     </output>
     <user>
svn commit -m "Lösche Datei 'meinedatei'."
     </user>
     <output>
Deleting       meinedatei
Transmitting file data .
Committed revision 14.
     </output>
    </shell>

    <textblock>
Das Löschen einer URL jedoch geschieht sofort, sodass
sie eine Log-Nachricht angeben müssen:
    </textblock>

    <shell>
     <user>
svn delete -m "Lösche Datei 'deinedatei'" file:///tmp/repos/test/deinedatei
     </user>
     <output>
Committed revision 15.
     </output>
    </shell>

    <textblock>
Hier ein Beispiel wie das Löschen einer geänderten
Datei durchgesetzt werden kann:
    </textblock>

    <shell>
     <user>
svn delete over-there
     </user>
     <output>
svn: Attempting restricted operation for modified resource
svn: Use --force to override this restriction
svn: 'over-there' has local modifications
     </output>
     <user>
svn delete --force over-there
     </user>
     <output> 
D         over-there
     </output>
    </shell>
   </section>
    
<!-- ================================================================= -->

   <section>
    <heading>
svn diff
    </heading>
    
    <textblock>
     <strong>Name</strong>
    </textblock>
    
    <textblock>
     <command><strong>svn diff</strong></command> -- Zeigt die Unterschiede zwischen zwei Dateien.
    </textblock>

    <textblock>
     <strong>Übersicht</strong>
    </textblock>
     
    <quotation>
     <command>svn diff [-r N[:M]] [--old ZIEL-ALT] [--new ZIEL-NEU] [PFAD...]</command>
    </quotation>
     
    <quotation>
     <command>svn diff -r N:M URL</command>
    </quotation>
    
    <quotation>
     <command>svn diff [-r N[:M]] URL1[@N] URL2[@M]</command>
    </quotation>

    <textblock>
     <strong>Beschreibung</strong>
    </textblock>

    <textblock>
Zeigt die Unterschiede zwischen zwei Dateien.  Die
drei unterschiedlichen Arten um <command>svn
diff</command> zu verwenden sind:
    </textblock>

    <textblock>
<command>svn diff [-r N[:M]] [--old ZIEL-ALT] [--new
ZIEL-NEU] [PFAD...]</command> zeigt die Unterschiede
zwischen <italic>ZIEL-ALT</italic> und
<italic>ZIEL-NEU</italic>.  Wenn
<italic>PFAD</italic>e angegeben werden, dann
werden diese relativ zum
<italic>ZIEL-ALT</italic> und
<italic>ZIEL-NEU</italic> behandelt und die
Ausgabe beschränkt sich auf Unterschiede zwischen diesen
Pfaden.  <italic>ZIEL-ALT</italic> and
<italic>ZIEL-NEU</italic> können Pfade in der
Arbeitskopie oder
<italic>URL</italic>[@<italic>REV</italic>]
sein. <italic>ZIEL-ALT</italic> nutzt
standardmässig das aktuelle Arbeitsverzeichnis und
<italic>ZIEL-NEU</italic> nutzt standardmässig
<italic>ZIEL-ALT</italic>.
<italic>N</italic> nutzt standardmässig
<italic>BASE</italic> oder wenn
<italic>ZIEL-ALT</italic> eine URL ist, dann
<italic>HEAD</italic>. <italic>M</italic>
nutzt standardmässig das aktuelle Arbeitsverzeichnis.
Wenn <italic>ZIEL-NEU</italic> eine URL ist,
dann wird standardmässig <italic>HEAD</italic> benutzt.
<command>svn diff -r N</command> setzt die Revision von
<italic>ZIEL-ALT</italic> auf
<italic>N</italic>, <command>svn diff -r
N:M</command> setzt ebenfalls die Revision von
<italic>ZIEL-NEU</italic> auf
<italic>M</italic>.
    </textblock>

    <textblock>
<command>svn diff -r N:M URL</command> ist die
Kurzform für <command>svn diff -r N:M --old=URL
--new=URL</command>.
    </textblock>

    <textblock>
<command>svn diff [-r N[:M]] URL1[@N]
URL2[@M]</command> ist die Kurzform für <command>svn diff
[-r N[:M]] --old=URL1 --new=URL2</command>.
    </textblock>

    <textblock>
Wenn <italic>ZIEL</italic> eine URL ist,
dann können die Revisionen N und M entweder mittels
<command>--revision</command> oder über die <italic>@</italic>
Notation angegeben werden.
    </textblock>

    <textblock>
WENN <italic>ZIEL</italic> eine Arbeitskopie
ist, dann bedeutet die <command>--revision</command>
Option:
    </textblock>

    <textblock>
     <command>--revision N:M</command>
    </textblock>

    <quotation>
Der Server vergleicht
<italic>ZIEL</italic>@<italic>N</italic>
und
<italic>ZIEL</italic>@<italic>M</italic>.
    </quotation>

    <textblock>
     <command>--revision N</command>
    </textblock>
    
    <quotation>
Der Client vergleicht 
<italic>ZIEL</italic>@<italic>N</italic>
mit der Arbeitskopie.
    </quotation>

    <textblock>
     <command>(keine --revision)</command>
    </textblock>
    
    <quotation>
Der Client vergleicht Basis und Arbeitskopien von
<italic>ZIEL</italic>.
    </quotation>

    <textblock>
Wenn die alternate Syntax benutzt wird, vergleicht der
Server <italic>URL1</italic> und
<italic>URL2</italic> in den Revisionen
<italic>N</italic> bzw
<italic>M</italic>.  Wenn entweder
<italic>N</italic> oder
<italic>M</italic> weggelassen werden, wird
<italic>HEAD</italic> angenommen.
    </textblock>

    <textblock>
Standardmässig ignoriert, <command>svn diff</command>
die Abstammung von Dateien und vergleicht nur den Inhalt
Wenn sie <command>--notice-ancestry</command> angeben, wird
die Abstammung der betroffenen Dateien berücksichtigt,
wenn Revisionen verglichen werden (das ist, wenn sie
<command>svn diff</command> für zwei Dateien mit gleichem
Inhalt, aber verschiedener Abstammung verwenden, wird der
ganze Inhalt der Datei so angezeigt, als ob er zuerst
gelöscht und dann wieder hinzugefügt worden wäre).
    </textblock>

    <textblock>
     <strong>Alternative Namen</strong>
    </textblock>
     
    <textblock>
     <command>di</command>
    </textblock>
    
    <textblock>
     <strong>Ändert</strong>
    </textblock>
     
    <textblock>
Nichts
    </textblock>

    <textblock>
     <strong>Archivzugriff</strong>
    </textblock>
     
    <textblock>
Bei Vergleichen mit etwas anderem als der
<italic>BASIS</italic> Revision in ihrer Arbeitskopie
    </textblock>

    <textblock>
     <strong>Optionen</strong>
    </textblock>

    <quotation>
     <command>--revision (-r) REV</command><br/>
     <command>--old ZIEL-ALT</command><br/>
     <command>--new ZIEL-NEU</command><br/>
     <command>--extensions (-x) "ARGS"</command><br/>
     <command>--non-recursive (-N)</command><br/>
     <command>--diff-cmd CMD</command><br/>
     <command>--notice-ancestry</command><br/>
     <command>--username USER</command><br/>
     <command>--password PASS</command><br/>
     <command>--no-auth-cache</command><br/>
     <command>--non-interactive</command><br/>
     <command>--no-diff-deleted</command><br/>
     <command>--config-dir DIR</command><br/>
    </quotation>

    <textblock>
     <strong>Beispiele</strong>
    </textblock>

    <textblock>
Vergleicht <italic>BASIS</italic> mit ihrer
Arbeitskopie (eine der häufigsten Anwendungen von
<command>svn diff</command>):
    </textblock>

    <shell>
     <user>
svn diff COMMITTERS
     </user>
     <output>
Index: COMMITTERS
===================================================================
--- COMMITTERS	(Revision 4404)
+++ COMMITTERS	(Arbeitskopie)
     </output>
    </shell>

    <textblock>
Vergleicht wie sich ihre Arbeitskopie von einer
älteren Revision unterscheiden:
    </textblock>

    <shell>
     <user>
svn diff -r 3900 COMMITTERS
     </user>
     <output>
Index: COMMITTERS
===================================================================
--- COMMITTERS	(Revision 3900)
+++ COMMITTERS	(Arbeitskopie)
     </output>
    </shell>

    <textblock>
Vergleiche Revision 3000 mit Revision 3500 unter
Verwendung der <italic>@</italic> Syntax:
    </textblock>

    <shell>
     <user>
svn diff http://svn.collab.net/repos/svn/trunk/COMMITTERS@3000 http://svn.collab.net/repos/svn/trunk/COMMITTERS@3500
     </user>
     <output>
Index: COMMITTERS
===================================================================
--- COMMITTERS	(Revision 3000)
+++ COMMITTERS	(Revision 3500)
     </output>
    </shell>

    <textblock>
Vergleiche Revision 3000 mit Revision 3500 unter
Verwendung einer Bereichsangabe (sie übergeben in diesem
Fall nur eine URL):
    </textblock>

    <shell>
     <user>
svn diff -r 3000:3500 http://svn.collab.net/repos/svn/trunk/COMMITTERS
     </user>
     <output>
Index: COMMITTERS
===================================================================
--- COMMITTERS	(Revision 3000)
+++ COMMITTERS	(Revision 3500)
     </output>
    </shell>

    <textblock>
Vergleiche Revision 3000 mit Revision 3500 für alle
Dateien in <path>trunk</path> unter Verwendung
einer Bereichsangabe:
    </textblock>

    <shell>
     <user>
svn diff -r 3000:3500 http://svn.collab.net/repos/svn/trunk
     </user>
    </shell>

    <textblock>
Vergleiche Revision 3000 mit Revision 3500 für nur
drei Dateien in <path>trunk</path> unter
Verwendung einer Bereichsangabe:
    </textblock>

    <shell>
     <user>
svn diff -r 3000:3500 --old http://svn.collab.net/repos/svn/trunk COMMITTERS README HACKING
     </user>
    </shell>

    <textblock>
Wenn sie eine Arbeitskopie haben, können sie die
Unterschiede erhalten ohne die langen URLs
anzugeben:
    </textblock>

    <shell>
     <user>
svn diff -r 3000:3500 COMMITTERS
     </user>
     <output>
Index: COMMITTERS
===================================================================
--- COMMITTERS	(Revision 3000)
+++ COMMITTERS	(Revision 3500)
     </output>
    </shell>

    <textblock>
Verwenden sie <command>--diff-cmd</command>
<italic>CMD</italic> <command>-x</command> um
Argumente direkt an das externe <command>diff</command> Programm zu
übergeben
    </textblock>
    
    <shell>
     <user>
svn diff --diff-cmd /usr/bin/diff -x "-i -b" COMMITTERS
     </user>
     <output>
Index: COMMITTERS
===================================================================
0a1,2
&gt; Das ist ein Text
&gt;
     </output>
    </shell>
   </section>
    
<!-- ================================================================= -->

   <section>
    <heading>
svn export
    </heading>

    <textblock>
     <strong>Name</strong>
    </textblock>
     
    <textblock>
<command><strong>svn export</strong></command> --  Exportiert einen
sauberen Verzeichnisbaum.
    </textblock>

    <textblock>
     <strong>Übersicht</strong>
    </textblock>
     
    <quotation>
     <command>svn export [-r REV] URL [PFAD]</command>
    </quotation>
     
    <quotation>
     <command>svn export PFAD1 PFAD2</command>
    </quotation>

    <textblock>
     <strong>Beschreibung</strong>
    </textblock>

    <textblock>
Die erste Form exportiert einen sauberen, durch URL
festgelegten Verzeichnisbaum, vom Projektarchiv und zwar
in der Revision <italic>REV</italic> sofern
angegeben, andernfalls wird <italic>HEAD</italic>
verwendet, nach <italic>PFAD</italic>.  Wenn
<italic>PFAD</italic> weggelassen wird, dann
wird die letze Komponente von
<italic>URL</italic> als Name für das lokale
Verzeichnis genommen.
    </textblock>

    <textblock>
Die zweite Form exportiert einen sauberen
Verzeichnisbaum von der Arbeitskopie
<italic>PFAD1</italic> nach
<italic>PFAD2</italic>. Alle lokalen Änderungen
bleiben erhalten, aber Dateien die nicht unter
Versionskontrolle stehen werden nicht kopiert.
    </textblock>

    <textblock>
     <strong>Alternative Namen</strong>
    </textblock>
     
    <textblock>
Keine
    </textblock>

    <textblock>
     <strong>Ändert</strong>
    </textblock>
     
    <textblock>
Lokale Platte
    </textblock>

    <textblock>
     <strong>Archivzugriff</strong>
    </textblock>
     
    <textblock>
Nur wenn von einer URL export wird
    </textblock>

    <textblock>
     <strong>Optionen</strong>
    </textblock>

    <quotation>
     <command>--Revision (-r) REV</command><br/>
     <command>--quiet (-q)</command><br/>
     <command>--force</command><br/>
     <command>--username USER</command><br/>
     <command>--password PASS</command><br/>
     <command>--no-auth-cache</command><br/>
     <command>--non-interactive</command><br/>
     <command>--config-dir DIR</command><br/>
    </quotation>

    <textblock>
     <strong>Beispiele</strong>
    </textblock>

    <textblock>
Exportiert von ihrer Arbeitskopie (zeigt keine Dateien
und Verzeichnise an):
    </textblock>

    <shell>
     <user>
svn export eine-ak mein-export
     </user>
     <output>
Export komplett.
     </output>
    </shell>

    <textblock>
Exportiert direkt vom Projektarchiv (zeigt alle
Dateien und Verzeichnisse an):
    </textblock>

    <shell>
     <user>
svn export file:///tmp/repos mein-export
     </user>
     <output>
A  mein-export/test
A  mein-export/quiz
...
Revision 15 exportiert.
     </output>
    </shell>
   </section>
    
<!-- ================================================================= -->

   <section>
    <heading>
svn help
    </heading>

    <textblock>
     <strong>Name</strong>
    </textblock>
     
    <textblock>
     <command><strong>svn help</strong></command> -- Hilfe!
    </textblock>

    <textblock>
     <strong>Übersicht</strong>
    </textblock>
     
    <quotation>
     <command>svn help [SUBKOMMANDO...]</command>
    </quotation>

    <textblock>
     <strong>Beschreibung</strong>
    </textblock>

    <textblock>
Ihr bester Freund wenn sie Subversion benutzen und
dieses Buch nicht in Reichweite ist!
    </textblock>

    <textblock>
     <strong>Alternative Namen</strong>
    </textblock>
     
    <textblock>
<command>?</command>, <command>h</command>
    </textblock>

    <textblock>
     <strong>Ändert</strong>
    </textblock>
     
    <textblock>
Nichts
    </textblock>
    
    <textblock>
     <strong>Archivzugriff</strong>
    </textblock>
     
    <textblock>
Nein
    </textblock>

    <textblock>
     <strong>Optionen</strong>
    </textblock>
    
    <quotation>
     <command>--version</command><br/>
     <command>--quiet (-q)</command><br/>
    </quotation>
   </section>
  
<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn import -- Überträgt rekursiv eine Kopie von PFAD nach URL.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn import [PFAD] URL</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Überträgt rekursiv eine Kopie von
<italic>PFAD</italic> nach
<italic>URL</italic>.  Wenn
<italic>PFAD</italic> weggelassen wird, dann
wird <italic><path>.</path></italic> angenommen.
Fehlende Elternverzeichnisse im Projektarchiv werden
angelegt.</textblock>


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>Keine</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Projektarchiv</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Ja</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--message (-m) TEXT
--file (-F) DATEI
--quiet (-q)
--non-recursive (-N)
--username USER
--password PASS
--no-auth-cache
--non-interactive
--force-log
--editor-cmd EDITOR
--encoding ENC
--config-dir DIR
--auto-props
--no-auto-props
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Importiert das lokale Verzeichnis
<path>meinproj</path> in das Basisverzeichnis des
Projektarchives:</textblock>

<shell>
$ svn import -m "Neuer Import" meinproj http://svn.red-bean.com/repos/test
Adding         meinproj/beispiel.txt
...
Übertrage Daten .........
Revision 16 übertragen.
</shell>

<textblock>Importiert das lokale Verzeichnis
<path>meinproj</path> nach
<path>trunk/vendors</path> in ihrem Projektarchiv.
Das Verzeichnis <path>trunk/vendors</path> muss
vor dem Import nicht existieren &mdash; <command>svn
import</command> wird fehlende Verzeichnisse rekurisv
anlegen:</textblock>
<shell>
$ svn import -m "Neuer import" meinproj \
http://svn.red-bean.com/repos/test/trunk/vendors/meinproj
Hinzufügen         meinproj/beispiel.txt
...
Übertrage Daten .........
Revision 19 übertragen.
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn info -- Zeigt Information über PFADe.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn info [PFAD...]</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt Information über Pfade in ihrer Arbeitskopie,
inclusive:</textblock>

<ul>
<li>Pfad</li>
<li>Name</li>
<li>URL</li>
<li>Revision</li>
<li>Kotentyp</li>
<li>Letzt. AutorIn</li>
<li>Letzte Revision</li>
<li>Letztes Änderungsdatum</li>
<li>Text zuletzt geändert</li>
<li>Eigenschaften zuletzt geändert</li>
<li>Prüfsumme</li>
</ul>


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>Keine</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Nichts</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Nein</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--targets DATEINAME
--recursive (-R)
--config-dir DIR
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock><command>svn info</command> zeigt alle nützlichen Informationen
die es von Objekten in ihrer Arbeitskopie hat an.
Für Dateien wird angezeigt:</textblock>

<shell>
$ svn info foo.c
Pfad: foo.c
Name: foo.c
URL: http://svn.red-bean.com/repos/test/foo.c
Revision: 4417
Knotentyp: file
Vorgemerkt: normal
Letzt. AutorIn: sally
Letzte Revision: 20
Letztes Änderungsdatum: 2003-01-13 16:43:13 -0600 (Mon, 13 Jan 2003)
Text zuletzt geändert: 2003-01-16 21:18:16 -0600 (Thu, 16 Jan 2003)
Eigenschaften zuletzt geändert: 2003-01-13 21:50:19 -0600 (Mon, 13 Jan 2003)
Prüfsumme: /3L38YwzhT93BWvgpdF6Zw==
</shell>

<textblock>Für Verzeichnisse wird angezeigt:</textblock>

<shell>
$ svn info vendors
Pfad: trunk
URL: http://svn.red-bean.com/repos/test/vendors
Revision: 19
Knotentyp: directory
Vorgemerkt: normal
Letzt. AutorIn: harry
Letzte Revision: 19
Letztes Änderungsdatum: 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003)
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn list -- Listet Vereichniseinträge im Projektarchiv.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn list [ZIEL...]</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Listet jede <italic>ZIEL</italic> Datei und
den Inhalt von jedem <italic>ZIEL</italic>
Verzeichnis so wie sie im Projektarchiv existieren.  Wenn
<italic>ZIEL</italic> eine Arbeitskopie ist,
dann wird die dazugehörige Projektarchiv URL
benutzt.</textblock>

<textblock>Standardmässig wird <italic>ZIEL</italic>
<italic><path>.</path></italic> verwendet, also die
Projektarchiv URL vom aktuellen Verzeichnis der
Arbeitskopie.</textblock>

<textblock>Mit <command>--verbose</command>, werden folgende
Statusfelder angezeigt:</textblock>

<ul>
<li>Revisionsnumber der letzten Übertragung
</li> <li>AutorIn der letzten
Übertragung </li> <li>Grösse (in
Bytes)</li> <li>Datum und Uhrzeit
der letzen Übertragung</li>
</ul>


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>ls</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Nichts</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Ja</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r) REV
--verbose (-v)
--recursive (-R)
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock><command>svn list</command> ist meist dann hilfreich,
wenn sie sehen wollen welche Dateien ein Projektarchiv hat
ohne eine Arbeitskopie herunterzuladen:</textblock>

<shell>
$ svn list http://svn.red-bean.com/repos/test/support
README.txt
INSTALL
examples/
...
</shell>

<textblock>Im Unterschied zum UNIX <command>ls</command>, können
sie die <command>--verbose</command> Option für zusätzliche
Information verwenden:</textblock>

<shell>
$ svn list --verbose file:///tmp/repos
16 sally         28361 Jan 16 23:18 README.txt
27 sally             0 Jan 18 15:27 INSTALL
24 harry               Jan 18 11:27 examples/
</shell>

<textblock>For further details, see <xref
linkend="svn-ch-3-sect-5.4"/>.</textblock>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn log --  Zeigt die
Log-Nachrichten.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn log [PFAD]</command></textblock>
<textblock><command>svn log URL [PFAD...]</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Standardmässig wird als Ziel das aktuelle Verzeichnis
genommen.  Wenn keine Argumente angegeben werden, dann
zeigt <command>svn log</command> die Log-Nachrichten von
allen Dateien und Verzeichnissen im aktuellen
Arbeitsverzeichnis ihrer Arbeitskopie.  Sie können das
Ergebnis verfeinern indem sie einen Pfad, eine oder
mehrere Revisionen oder jede Kombination von beiden
angeben.  Der standardmässige Revisionsbereich ist
<italic>BASE:1</italic>.</textblock>

<textblock>Wenn sie eine einzelne URL angeben, dann werden die
Log-Nachrichten für alles angezeigt, was in und unterhalb
dieser URL liegt.  Wenn sie nach der URL auch Pfade
angeben, dann werden nur die Log-Nachrichten für diese
Pfade unter der URL angezeigt.  Der standardmässige
Revisionsbereich für eine URL ist
<italic>HEAD:1</italic>.</textblock>

<textblock>Mit <command>--verbose</command> wird <command>svn
log</command> auch alle betroffenen Pfade zu jeder
Log-Nachricht anzeigen.  Mit <command>--quiet</command> wird
<command>svn log</command> den eigentlichen
Nachrichtentext selbst nicht anzeigen (das ist
kombinierbar mit <command>--verbose</command>).</textblock>

<textblock>Jede Log-Nachricht wird nur einmal ausgegeben, selbst
dann, wenn expizit mehrere Pfade für eine Revision
angefordert werden.  Standardmässig erlaubt <command>svn
log</command> die Verfolgung der Kopier-Historie.
Benutzen sie <command>--stop-on-copy</command> um dieses
Verhalten abzustellen, was sinnvoll sein kann um die
Auflistung bei Abzweigungen (branches) anzuhalten.</textblock>


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>Keine</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Nichts</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Ja</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r) REV
--quiet (-q)
--verbose (-v)
--targets DATEINAME
--stop-on-copy
--incremental
--xml
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Sie können die Log-Nachrichten für alle geänderten
Pfade in ihrer Arbeitskopie einsehen, indem sie
<command>svn log</command> im höchsten Verzeichnis
aufrufen:</textblock>

<shell>
$ svn log
------------------------------------------------------------------------
r20 | harry | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line

Tweak.
------------------------------------------------------------------------
r17 | sally | 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003) | 2 lines
...
</shell>

<textblock>Zeigt alle Log-Nachrichten für eine einzelne Datei
ihrer Arbeitskopie:</textblock>

<shell>
$ svn log foo.c
------------------------------------------------------------------------
r32 | sally | 2003-01-13 16:43:13 -0600 (Mon, 13 Jan 2003) | 1 line

Feinheiten hinzugefügt.
------------------------------------------------------------------------
r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines
...
</shell>

<textblock>Wenn sie keine Arbeitskopie bei der Hand haben, können
sie eine URL verwenden:</textblock>

<shell>
$ svn log http://svn.red-bean.com/repos/test/foo.c
------------------------------------------------------------------------
r32 | sally | 2003-01-13 16:43:13 -0600 (Mon, 13 Jan 2003) | 1 line

Feinheiten hinzugefügt.
------------------------------------------------------------------------
r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines
...
</shell>

<textblock>Wenn sie verschiedene Pfade unterhalb der gleichen
URL, können sie die <italic>URL [PFAD...]</italic>
Syntax verwenden.</textblock>

<shell>
$ svn log http://svn.red-bean.com/repos/test/ foo.c bar.c
------------------------------------------------------------------------
r32 | sally | 2003-01-13 16:43:13 -0600 (Mon, 13 Jan 2003) | 1 line

Feinheiten hinzugefügt.
------------------------------------------------------------------------
r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line

Neue Datei bar.c hinzugefügt.
------------------------------------------------------------------------
r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines
...
</shell>

<textblock>Das hat den gleichen Effekt wie wenn beide URLs in der
Kommandozeile angegeben werden:</textblock>

<shell>
$ svn log http://svn.red-bean.com/repos/test/foo.c \
http://svn.red-bean.com/repos/test/bar.c
...
</shell>

<textblock>Wenn sie die Ergebnisse mehrerer Aufrufe verketten
wollen, dann ist die <command>--incremental</command>
hilfreich.  <command>svn log</command> zeigt normalerweise
eine strichlierte Zeile am Beginn der Ausgabe und nach
jeder einzelnen Log-Nachricht.  Wenn sie <command>svn
log</command> für den Bereich von zwei Revisionen
aufrufen, würden sie das erhalten:</textblock>

<shell>
$ svn log -r 14:15
------------------------------------------------------------------------
r14 | ... 

------------------------------------------------------------------------
r15 | ... 

------------------------------------------------------------------------
</shell>

<textblock>Wenn sie zwei nicht direkt aufeinanderfolgende
Log-Nachrichten in eine Datei ausgeben wollen, dann machen
sie das eventuell so:</textblock>

<shell>
$ svn log -r 14 &gt; mylog
$ svn log -r 19 &gt;&gt; mylog
$ svn log -r 27 &gt;&gt; mylog
$ cat mylog
------------------------------------------------------------------------
r14 | ... 

------------------------------------------------------------------------
------------------------------------------------------------------------
r19 | ... 

------------------------------------------------------------------------
------------------------------------------------------------------------
r27 | ... 

------------------------------------------------------------------------
</shell>

<textblock>Sie können die unnötige zweifache Ausgabe der
strichlierten Linien vermeiden, indem sie die
<command>--incremental</command> Option verwenden:</textblock>


<shell>
$ svn log --incremental -r 14 &gt; mylog
$ svn log --incremental -r 19 &gt;&gt; mylog
$ svn log --incremental -r 27 &gt;&gt; mylog
$ cat mylog
------------------------------------------------------------------------
r14 | ... 

------------------------------------------------------------------------
r19 | ... 

------------------------------------------------------------------------
r27 | ... 
</shell>

<textblock>Die <command>--incremental</command> Option erzeugt eine
ähnliche Ausgabe, wenn sie die <command>--xml</command>
Option verwenden.</textblock>



<tip>
<textblock>Wenn sie <command>svn log</command> auf einen
bestimmten Pfad und eine bestimmte Revision anwenden und
sie bekommen überhaupt keine Ausgabe</textblock>

<shell>
$ svn log -r 20 http://svn.red-bean.com/untouched.txt
------------------------------------------------------------------------
</shell>

<textblock>Dann bedeutet das, dass dieser Pfad in dieser
Revision nicht verändert wurde.  Wenn sie von der
höchsten Ebene des Projektarchives oder wenn sie die
Datei kennen, die sich in dieser Revision geändert hat,
dann können sie das explizit angeben:</textblock>

<shell>
$ svn log -r 20 geaendert.txt 
------------------------------------------------------------------------
r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line

Es wurde dies und das geändert.
------------------------------------------------------------------------
</shell>
</tip>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn merge -- Übertrage die Unterschiede zwischen zwei Quellen
auf einen Pfad in der Arbeitskopie.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn merge QuellURL1[@N] QuellURL2[@M] [AKPFAD]</command></textblock>
<textblock><command>svn merge -r N:M QUELLE [PFAD]</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>In der ersten Form werden die URLs der Quellen für die
Revisionen <italic>N</italic> und
<italic>M</italic> angegeben. Das sind die zwei
Quellen die verglichen werden.  Wenn die Revisionen
weggelassen werden, dann wird standardmässig
<italic>HEAD</italic> genommen.</textblock>

<textblock>In der zweiten Form kann
<italic>QUELLE</italic> eine URL oder ein Objekt
aus der Arbeitskopie sein, wofür die korrespondiertende
URL ermittelt wird.  Diese URL, in den Revisionen
<italic>N</italic> und
<italic>M</italic> legt fest welche zwei Quellen
verglichen werden.</textblock>

<textblock><italic>AKPFAD</italic> ist der Pfad der
Arbeitskopie, auf welchen die Änderungen übertragen
werden.  Wenn <italic>AKPFAD</italic>
weggelassen wird, dann wird
<italic><path>.</path></italic> angenommen, ausser
die Quellen haben den gleichen Basisnamen, welcher auf
eine Datei in <italic><path>.</path></italic> passt:
in diesem Fall werden die Unterschiede auf diese Datei
übertragen.</textblock>

<textblock>Im Unterschied zu <command>svn diff</command> nimmt
das merge Kommando beim Zusammenführen Rücksicht auf die
Abstammung einer Datei.  Das ist sehr wichtig, wenn sie
Unterschiede von einem Zweig (branch) in einen anderen
Zweig übertragen und sie haben eine Datei in einem Zweig
umbenannt und im anderen Zweig aber nicht.</textblock>


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>Keine</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Arbeitskopie</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Nur wenn mit URLs gearbeitet wird</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r) REV
--non-recursive (-N)
--quiet (-q)
--force
--dry-run
--diff3-cmd CMD
--ignore-ancestry
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Überträgt die Änderungen aus einem Nebenzweig (branch)
zurück zum offiziellen Hauptzweig (trunk).  Für das
Beispiel wird angenommen, dass sie eine Arbeitskopie des
Hauptzweiges haben und dass der Nebenzweig in Revision 250
erstellt wurde:</textblock>

<shell>
$ svn merge -r 250:HEAD http://svn.red-bean.com/repos/branches/mein-zweig
U  meinproj/tiny.txt
U  meinproj/thhgttg.txt
U  meinproj/win.txt
U  meinproj/flo.txt
</shell>

<textblock>Wenn die Abzweigung bei Revision 23 erfolgte und sie
wollen die Änderungen aus dem Hauptzweig auf ihren
Nebenzweig übertragen, dann können sie dies von der
Arbeitskopie ihres Nebenzweiges aus erledigen:</textblock>

<shell>
$ svn merge -r 23:30 file:///tmp/repos/trunk/vendors
U  meinproj/thhgttg.txt
...
</shell>

<textblock>Um Änderungen einer einzelnen Datei zu
übertragen:</textblock>

<shell>
$ cd meinproj
$ svn merge -r 30:31 thhgttg.txt 
U  thhgttg.txt
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn mkdir -- Erzeugt ein neues Verzeichnis unter Versionskontrolle.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn mkdir PFAD...</command></textblock>
<textblock><command>svn mkdir URL...</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Erzeugt ein Verzeichnis unter Angabe von einem
<italic>PFAD</italic> oder einer URL.  Lokale
Änderungen werden sofort durchgeführt, für das
Projektarchiv wird die Aktion aber nur vorgemerkt und erst
durchgeführt, wenn sie die lokalen Änderungen übertragen.
Ein Verzeichnis, das eine URL im Projektarchiv angegeben
wurde wird durch eine sofortige Übertragung gleich
angelegt.  Mehrere URLs werden getrennt übertragen.  In
beiden Fällen müssen die darüberliegenden Verzeichnisse
bereits existieren.</textblock>


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>Keine</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Arbeitskopie, das Projektarchiv wenn mit einer URL gearbeitet wird</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Nur wenn mit einer URL gearbeitet wird</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--message (-m) TEXT
--file (-F) DATEI
--quiet (-q)
--username USER
--password PASS
--no-auth-cache
--non-interactive
--editor-cmd EDITOR
--encoding ENC
--force-log
--config-dir DIR
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Erstellt ein Verzeichnis in ihrer Arbeitskopie:</textblock>

<shell>
$ svn mkdir neudir
A         neudir
</shell>

<textblock>Erzeugt ein Verzeichnis im Projektarchiv (sofortige
Übertragung, daher ist eine Log-Nachricht
erforderlich):</textblock>

<shell>
$ svn mkdir -m "Erstelle ein neues Verzeichnis." http://svn.red-bean.com/repos/neudir

Revision 26 übertragen.
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn move -- Verschiebt eine Datei oder Verzeichnis.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn move QUELLE ZIEL</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Das Kommando verschiebt eine Datei oder Verzeichnis in ihrer
Arbeitskopie oder im Projektarchiv.</textblock>

<tip>
<hint>Das Kommando hat die gleiche Auswirkung wie ein
<command>svn copy</command> gefolgt von einem
<command>svn delete</command>.</hint>
</tip>

<note>
<hint>Subversion unterstützt nicht das Verschieben
zwischen Arbeitskopie und URLs.  Zusätzlich können sie
Dateien nur innerhalb eines einzelnen Projektarchives
verschieben &mdash; Subversion unterstützt keine
Verschiebungen über die Grenzen eines Projektarchives
hinweg.</hint>
</note>




<textblock>AK  -&gt; AK</textblock>

<quotation>Verschiebt und merkt eine Datei oder Verzeichnis 
zum Hinzufügen vor (mit Historie).</quotation>




<textblock>URL -&gt; URL</textblock>

<quotation>Ausschliesslich serverseitige Namensänderung.</quotation>






<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>mv, rename, ren</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Arbeitskopie, Projektarchiv wenn mit einer URL gearbeitet wird</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Nur wenn mit einer URL gearbeitet wird</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--message (-m) TEXT
--file (-F) DATEI
--Revision (-r) REV
--quiet (-q)
--force
--username USER
--password PASS
--no-auth-cache
--non-interactive
--editor-cmd EDITOR
--encoding ENC
--force-log
--config-dir DIR
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Verschiebt eine Datei in ihrer Arbeitskopie:</textblock>

<shell>
$ svn move foo.c bar.c
A         bar.c
D         foo.c
</shell>

<textblock>Verschiebt eine Datei im Projektarchiv (sofortige
Übertragung, daher ist eine Log-Nachricht erforderlich):
</textblock>

<shell>
$ svn move -m "Move a file" http://svn.red-bean.com/repos/foo.c \
http://svn.red-bean.com/repos/bar.c

Revision 27 übertragen.
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn propdel -- Entferne eine Eigenschaft von einem Objekt.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn propdel PROPNAME [PFAD...]</command></textblock>
<textblock><command>svn propdel PROPNAME --revprop -r REV [URL]</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Entfernt Eigenschaften von Dateien, Verzeichnissen
oder Revisionen.  Die erste Form entfernt Eigenschaften
mit Versionskontrolle in der Arbeitskopie, während die
zweite Eigenschaften ohne Versionskontrolle in einer
Revision des Projektarchives entfernt.</textblock>


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>pdel, pd</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Arbeitskopie, Projektarchiv nur wenn mit einer URL gearbeitet wird</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Nur wenn mit einer URL gearbeitet wird</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--quiet (-q)
--recursive (-R)
--Revision (-r) REV
--revprop
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Löscht eine Eigenschaft von einer Datei in ihrer
Arbeitskopie.</textblock>

<shell>
$ svn propdel svn:mime-type  irgendein-script
Eigenschaft 'svn:mime-type' gelöscht von 'irgendein-script'.
</shell>

<textblock>Löscht die Eigenschaft einer Revisions:</textblock>

<shell>
$ svn propdel --revprop -r 26 release-date 
Eigenschaft 'release-date' gelöscht von Projektarchiv Revision '26'
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn propedit -- Bearbeitet die Eigenschaft von einem oder mehreren
Objekten unter Versionskontrolle.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn propedit PROPNAME PFAD...</command></textblock>
<textblock><command>svn propedit PROPNAME --revprop -r REV [URL]</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Bearbeitet eine oder mehrere Eigenschaften unter
Benutzung ihres bevorzugten Editors.  Die erste Form
bearbeitet Eigenschaften mit Versionskontrolle in ihrer
Arbeitskopie, während die zweite Form Eigenschaften ohne
Versionskontrolle in einer Revision des Projektarchives
bearbeitet.</textblock>


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>pedit, pe</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Arbeitskopie, Projektarchiv nur wenn mit einer URL gearbeitet wird</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Nur wenn mit einer URL gearbeitet wird</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r) REV
--revprop
--username USER
--password PASS
--no-auth-cache
--non-interactive
--encoding ENC
--editor-cmd EDITOR
--config-dir DIR
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock><command>svn propedit</command> macht es leicht
Änderungen an Eigenschaften, die mehreren Werte halten
können, vorzunehmen:</textblock>

<shell>
$ svn propedit svn:keywords  foo.c 
&lt;svn wird hier ihren bevorzugten Editor aufrufen und zwar mit
einem geöffnetem Buffer, welcher die aktuellen Werte der
svn:keywords Eigenschaft enthält.  Sie können hier mehrere Werte
zu einer Eigenschaft hinzufügen, indem sie einfach einen Wert pro
Zeile eingeben.&gt;
Setze neuen Wert für die Eigenschaft 'svn:keywords' von 'foo.c'
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn propget -- Zeigt den Wert einer Eigenschaft.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn propget PROPNAME [PFAD...]</command></textblock>
<textblock><command>svn propget PROPNAME --revprop -r REV [URL]</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt den Wert einer Eigenschaft von Dateien,
Verzeichnissen oder Revisionen.  Die erste Form zeigt
Eigenschaften unter Versionskontrolle in ihrer
Arbeitskopie, während die zweite Form Eigenschaften ohne
Versionskontrolle in einer Revision des Projektarchives
zeigt.  Siehe <xref linkend="svn-ch-7-sect-2"/> für mehr
Information über Eigenschaften.</textblock>


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>pget, pg</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Arbeitskopie, Projektarchiv nur wenn mit einer URL gearbeitet wird</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Nur wenn mit einer URL gearbeitet wird</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--recursive (-R)
--Revision (-r) REV
--revprop
--strict
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Zeigt eine Eigenschaft von einer Datei in ihrer
Arbeitskopie:</textblock>

<shell>
$ svn propget svn:keywords foo.c
Author
Date
Rev
</shell>

<textblock>Das gleiche für eine Eigenschaft einer
Revision:</textblock>

<shell>
$ svn propget svn:log --revprop -r 20 
Beginn eines Berichtes.
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn proplist -- Zeigt eine Liste aller Eigenschaften.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn proplist [PFAD...]</command></textblock>
<textblock><command>svn proplist --revprop -r REV [URL]</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt alle Eigenschaften von einer Datei, Verzeichniss
oder Revision.  Die erste Form zeigt Eigenschaften unter
Versionskontrolle in ihrer Arbeitskopie, während die
zweite Form Eigenschaften ohne Versionskontrolle in einer
Revision des Projektarchives zeigt.</textblock>


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>plist, pl</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Arbeitskopie, Projektarchiv nur wenn mit einer URL gearbeitet wird</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Nur wenn mit einer URL gearbeitet wird</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--verbose (-v)
--recursive (-R)
--Revision (-r) REV
--quiet (-q)
--revprop
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Sie können proplist verwenden um die Eigenschaften
eines Objektes in ihrer Arbeitskopie einzusehen:</textblock>

<shell>
$ svn proplist foo.c
Properties on 'foo.c':
svn:mime-type
svn:keywords
owner
</shell>

<textblock>Aber so richtig nützlich wird svn proplist mit der
<command>--verbose</command> option, weil es dann auch die
Werte für die Eigenschaften anzeigt:</textblock>

<shell>
$ svn proplist --verbose foo.c
Properties on 'foo.c':
svn:mime-type : text/plain
svn:keywords : Author Date Rev
owner : sally
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn propset -- Set PROPNAME to PROPVAL on Dateien, Verzeichnissen, or Revisions.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn propset PROPNAME [PROPWERT | -F WERTDATEI] PFAD...</command></textblock>
<textblock><command>svn propset PROPNAME --revprop -r REV [PROPWERT | -F WERTDATEI] [URL]</command></textblock>


<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Setzt <italic>PROPNAME</italic> auf
<italic>PROPWERT</italic> für Dateien,
Verzeichnisse oder Revisionen.  Die erste Form erzeugt
eine Änderung einer Eigenschaft unter Versionskontrolle in
der Arbeitskopie, während die zweite Form eine Änderung
einer Eigenschaft ohne Versionskontrolle in einer Revision
des Projektarchives erzeugt.</textblock>

<tip>
<textblock>Subversion hat eine Anzahl von
<italic>Special</italic> Eigenschaften, die das Verhalten
von svn beeinflussen.  Siehe <xref
linkend="svn-ch-7-sect-2.3"/> für mehr Informationen zu
diesen Eigenschaften.</textblock>
</tip>


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>pset, ps</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Arbeitskopie, Projektarchiv nur wenn mit einer URL gearbeitet wird</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Nur wenn mit einer URL gearbeitet wird</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--file (-F) DATEI
--quiet (-q)
--Revision (-r) REV
--targets DATEINAME
--recursive (-R)
--revprop
--username USER
--password PASS
--no-auth-cache
--non-interactive
--encoding ENC
--force
--config-dir DIR
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Setzt den Mime-Typ einer Datei:</textblock>

<shell>
$ svn propset svn:mime-type image/jpeg foo.jpg 
Eigenschaft 'svn:mime-type' gesetzt für 'foo.jpg'
</shell>

<textblock>Auf UNIX Systemen, wenn sie für eine Datei das
ausführbar Recht setzen wollen:</textblock>

<shell>
$ svn propset svn:executable ON irgendeinscript
property 'svn:executable' set on 'irgendeinscript'
</shell>

<textblock>Möglicherweise haben sie eine interne Vorschrift, die
verschiedene Eigenschaften verwendet, um das Leben von
MitarbeiterInnen an einem Projekt zu erleichtern:</textblock>

<shell>
$ svn propset owner sally foo.c
property 'owner' set on 'foo.c'
</shell>

<textblock>Wenn sie einen Fehler in einer Log-Nachricht einer
bestimmten Revision gemacht haben und sie wollen diese
ändern, dann verwenden sie <command>--revprop</command> und
setzen svn:log auf die neue Log-Nachricht:</textblock>

<shell>
$ svn propset --revprop -r 25 svn:log "Bericht über die Reise nach New York."
Eigenschaft 'svn:log' für Revision '25' im Projektarchiv gesetzt
</shell>

<textblock>Wenn sie keine Arbeitskopie haben können sie eine URL
angeben.</textblock>

<shell>
$ svn propset --revprop -r 26 svn:log "Zusatz-Dokument." http://svn.red-bean.com/repos
Eigenschaft 'svn:log' für Revision '25' im Projektarchiv gesetzt
</shell>

<textblock>Sie können propset anweisen seine Eingaben aus einer
Datei zu holen.  Sie können das einsetzen um den Inhalt
einer Eigenschaft mit binären Werte zu versorgen:</textblock>

<shell>
$ svn propset owner-pic -F sally.jpg moo.c 
Eigenschaft 'owner-pic' gesetzt für 'moo.c'
</shell>

<note>
<hint>Standardmässig können sie Eigenschaften einer
Revision in einem Subversion Projektarchiv nicht ändern.
Ihr Projektarchiv Administrator muss die Änderung von
Eigenschaften einer Revision ausdrücklich erlauben,
indem er einen Haken (hook) mit dem Namen
<italic>pre-revprop-change</italic> erzeugt.  Siehe
<xref linkend="svn-ch-5-sect-2.1"/> für mehr Information
zu Haken-Skripte (hook scripts).</hint>
</note>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn resolved -- Entfernt den <italic>conflicted</italic> Status von
Dateien oder Verzeichnissen in der Arbeitskopie.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn resolved PFAD...</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Entfernt den <italic>conflicted</italic> Status von
Dateien oder Verzeichnissen in der Arbeitskopie.  Dieses
Subkommando löst weder semantisch Konflikte auf, noch
entfernt es Konfliktmarken.  Es löscht lediglich zum
Konflikt gehörende Dateien und ermöglicht es so, dass das
Verzeichnis wieder übertragen werden kann.  Es teilt
Subversion also mit, dass der Konflikt
<italic>resolved</italic> (aufgelöst) wurde.  Siehe <xref
linkend="svn-ch-3-sect-4.4"/> für einen tieferen Einblick in
das Auflösen von Konflikten.</textblock>


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>Keine</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Arbeitskopie</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Nein</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--targets DATEINAME
--recursive (-R)
--quiet (-q)
--config-dir DIR
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Wenn sie bei einer Aktualisierung einen Konflikt
bekommen haben, werden in ihrer Arbeitskopie drei neue
Dateien erzeugt:</textblock>

<shell>
$ svn update
C  foo.c
Aktualisiert auf Revision 31.
$ ls
foo.c
foo.c.mine
foo.c.r30
foo.c.r31
</shell>

<textblock>Dann wenn sie den Konflikt aufgelöst haben und
<path>foo.c</path> wieder bereit zur Übertragung
ist, dann rufen sie <command>svn resolved</command> auf,
damit ihre Arbeitskopie weiss, dass sie alles notwendige
veranlasst haben.</textblock>

<warning>
<hint>Sie <emphasis>können</emphasis> auch nur die
konfliktbezogenen Dateien löschen und eine Übertragung
durchführen, aber <command>svn resolved</command> bringt
zusätzlich einige Evidenzdaten im administrativen
Bereich der Arbeitskopie in Ordnung, sodass wir
empfehlen dass sie dieses Kommando verwenden.</hint>
</warning>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn revert -- Macht alle lokalen Änderungen rückgängig.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn revert PFAD...</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Macht alle lokalen Änderungen an einer Datei oder
einem Verzeichnis rückgängig und löscht alle
Konfliktmarken.  <command>svn revert</command> macht nicht
nur Änderungen am Inhalt eines Objektes in ihrer
Arbeitskopie rückgängig, sondern auch Änderungen an
Eigenschaften.  Schlussendlich können sie es verwenden um
vorgemerkte Operationen rückgängig zu machen, die sie
vielleicht vorbereitet haben (z.B. Dateien, die zum
hinzufügen oder löschen vorgemerkt wurden, können wieder
aus der Vormerkung entfernt werden).</textblock>


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>Keine</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Arbeitskopie</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Nein</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--targets DATEINAME
--recursive (-R)
--quiet (-q)
--config-dir DIR
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Änderungen einer Datei rückgängig machen:</textblock>

<shell>
$ svn revert foo.c
Zurückgenommen foo.c
</shell>

<textblock>Wenn sie die Änderungen an allen Dateien eines
Verzeichnisses rückgängig machen wollen, dann verwenden
sie die <command>--recursive</command> Option:</textblock>

<shell>
$ svn revert --recursive .
Zurückgenommen neudir/afile
Zurückgenommen foo.c
Zurückgenommen bar.txt
</shell>

<textblock>Schliesslich können sie alle vorgemerkten Operationen
rückgängig machen:</textblock>

<shell>
$ svn add irrtuemlich.txt hoppala
A         irrtuemlich.txt
A         hoppala
A         hoppala/hopsi.c

$ svn revert irrtuemlich.txt hoppala
Zurückgenommen irrtuemlich.txt
Zurückgenommen hoppala

$ svn status
?      irrtuemlich.txt
?      hoppala
</shell>

<note>
<textblock>Wenn sie keine Ziele für <command>svn
revert</command> angeben, dann geschieht nichts &mdash;
um sie davor zu bewahren irrtümlich Änderungen an ihrer
Arbeitskopie zu verlieren, erfordert <command>svn
revert</command> die explizite Angabe der Ziele.</textblock>
</note>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn status -- Zeigt den Status von Dateien und Verzeichnissen in ihrer Arbeitskopie.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn status [PFAD...]</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt den Status von Dateien und Verzeichnissen in
ihrer Arbeitskopie.  Ohne Argumente werden nur lokal
geänderte Objekte angezeigt (kein Zugriff auf das
Projektarchiv).  Mit <command>--show-updates</command>
werden Arbeitsrevision und 'veraltet' Informationen
(out-of-date) hinzugefügt.  Mit
<command>--verbose</command>, wird die volle
Revisionsinformation für jedes Objekt angezeigt.</textblock>

<textblock>Die ersten fünf Spalten in der Ausgabe sind jeweils
einen Buchstaben breit und jede Spalte gibt Auskunft über
verschiedene Aspekte der Objekte in der
Arbeitskopie.</textblock>

<textblock>Die erste Spalte sagt aus, ob das Objekt hinzugefügt,
gelöscht, oder in sonstiger Weise verändert wurde.</textblock>




<textblock>' '</textblock>

<quotation>Keine Änderungen.</quotation>




<textblock>'A'</textblock>

<quotation>Objekt ist vorgemerkt zum Hinzufügen (Added).</quotation>




<textblock>'D'</textblock>

<quotation>Objekt ist vorgemerkt zum Löschen (Deleted).</quotation>




<textblock>'M'</textblock>

<quotation>Objekt wurde geändert (Modified).</quotation>




<textblock>'C'</textblock>

<quotation>Objekt steht in Konflikt mit Änderungen, die vom
Projektarchiv empfangen wurden (Conflicted).</quotation>




<textblock>'I'</textblock>

<quotation>Objekt wird ignoriert (z.B. über die
svn:ignore Eigenschaft)</quotation>




<textblock>'?'</textblock>

<quotation>Objekt steht nicht unter Versionskontrolle.</quotation>




<textblock>'!'</textblock>

<quotation>Objekt fehlt (z.B. weil es verschoben oder
gelöscht wurde, ohne, dass dazu die entsprechenden
<command>svn</command> Kommandos verwendet wurden).
Es kann auch bedeuten, dass ein Verzeichnis
unvollständig ist (z.B.  weil ein checkout oder
update unterbrochen wurden).</quotation>




<textblock>'~'</textblock>

<quotation>Das Objekt steht als Verzeichnis unter
Versionskontrolle und und wurde durch eine Datei
ersetzt oder umgekehrt.</quotation>





<textblock>Die zweite Spalte zeigt den Status der Eigenschaften
von Dateien oder Verzeichnissen an.</textblock>




<textblock>' '</textblock>

<quotation>Keine Änderungen.</quotation>




<textblock>'M'</textblock>

<quotation>Eigenschaften für dieses Objekt wurden geändert
(Modified).</quotation>




<textblock>'C'</textblock>

<quotation>Eigenschaften für dieses Objekt stehen im
Konflikt mit Eigenschaften die vom Projektarchiv
empfangen wurden (Conflicted).</quotation>





<textblock>Die dritte Spalte zeigt an, ob das Objekt in der
Arbeitskopie gesperrt ist.</textblock>




<textblock>' '</textblock>

<quotation>Objekt ist nicht gesperrt.</quotation>




<textblock>'L'</textblock>

<quotation>Objekt ist gesperrt (Locked).</quotation>





<textblock>Die vierte Spalte zeigt an, ob ein Objekt für das
'Hinzufügen mit Historie' vorgemerkt ist.</textblock>




<textblock>' '</textblock>

<quotation>Keine Historie für die Übertragung vorgemerkt.</quotation>




<textblock>'+'</textblock>

<quotation>Historie für die Übertragung vorgemerkt.</quotation>





<textblock>Die fünfte Spalte zeigt an, ob das Objekt relativ zu
seinen Eltern umgestellt wurde (siehe <xref
linkend="svn-ch-4-sect-5"/>).</textblock>




<textblock>' '</textblock>

<quotation>Das Objekt ist ein Kind seines Elternverzeichnisses.</quotation>




<textblock>'S'</textblock>

<quotation>Das Objekt wurde umgestellt (Switched).</quotation>





<textblock>Die 'veraltet' Information erscheint in der in der
achten Spalte (aber nur, wenn die
<command>--show-updates</command> Option angegeben
wurde).</textblock>




<textblock>' '</textblock>

<quotation>Das Objekt in der Arbeitskopie ist aktuell.</quotation>




<textblock>'*'</textblock>

<quotation>Am Server existiert eine neuere Revision des
Objektes.</quotation>





<textblock>Die restlichen Felder haben eine variable Breite und
sind durch Leerzeichen getrennt.  Wenn die
<command>--show-updates</command> oder
<command>--verbose</command> Option angegeben wurde, dann
steht im nächsten Feld die Arbeitsrevision.</textblock>

<textblock>Wenn die <command>--verbose</command> Option angegeben
wurde, dann werden Revision und AutorIn der lezten
Übertragung angezeigt.</textblock>

<textblock>Der Objektname ist immer das letzte Feld und kann daher
Leerzeichen enthalten.</textblock>



<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>stat, st</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Nichts</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Nur wenn die <command>--show-updates</command> Option verwendet wird.</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--show-updates (-u)
--verbose (-v)
--non-recursive (-N)
--quiet (-q)
--no-ignore
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Das ist der einfachste Weg um herauszufinden, welche
Änderungen sie an ihrer Arbeitskopie gemacht haben:</textblock>

<shell>
$ svn status ak
M     ak/bar.c
A  +   ak/qax.c
</shell>

<textblock>Wenn sie herausfinden wollen, welche Dateien in ihrer
Arbeitskopie veraltet sind, verwenden sie die
<command>--show-updates</command> Option (es werden
<emphasis>keine</emphasis> Änderungen an ihrer
Arbeitskopie gemacht).  Hier wurde die Datei
<path>ak/foo.c</path> im Projektarchiv geändert,
nachdem wir unsere Arbeitskopie aktualisiert haben:</textblock>

<shell>
$ svn status --show-updates ak
M           965    ak/bar.c
*     965    ak/foo.c
A  +         965    ak/qax.c
Status im Vergleich zu Revision:    981
</shell>

<note>
<textblock><command>--show-updates</command> zeigt
<emphasis>nur</emphasis> einen Stern neben dem Objekt
das veraltet ist (das heisst, dass das Objekt Änderungen
vom Projektarchiv empfängt, wenn <command>svn
update</command> durchgeführt wird).
<command>--show-updates</command> zeigt
<emphasis>nicht</emphasis> die Revisionsnummer des
Objektes im Projektarchiv an.</textblock>
</note>

<textblock>And finally, the most information you can get out of
the status subcommand:</textblock>

<shell>
$ svn status --show-updates --verbose ak
M           965       938 sally        ak/bar.c
*     965       922 harry        ak/foo.c
A  +         965       687 harry        ak/qax.c
965       687 harry        ak/zig.c
Head Revision:   981
</shell>

<textblock>Für weiter Beispiele zu <command>svn status</command>,
siehe <xref linkend="svn-ch-3-sect-4.3.1"/>.</textblock>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn switch -- Stelle die Arbeitskopie auf eine andere URL um.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn switch URL [PFAD]</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Dieses Subkommando stellt ihre Arbeitskopie so um,
dass sie eine neue URL spielgelt &mdash; üblicherweise hat
diese URL gemeinsame Vorfahren mit ihrer Arbeitskopie,
obwohl das nicht erforderlich ist.  Dies ist der typische
Weg von Subversion um eine Arbeitskopie in einen neuen
Nebenzweig (branch) zu verschieben.  Siehe <xref
linkend="svn-ch-4-sect-5"/> für einen tieferen Einblick
zum Thema Umstellung/Wechsel (switching).</textblock>


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>sw</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Arbeitskopie</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Ja</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r) REV
--non-recursive (-N)
--quiet (-q)
--diff3-cmd CMD
--relocate
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Wenn sie im Verzeichnis <path>vendors</path>
stehen, für welches ein Zweig
<path>vendors-mit-korr</path> erstellt wurde,
können sie ihre Arbeitskopie auf diesen Zweig
umstellen:</textblock>

<shell>
$ svn switch http://svn.red-bean.com/repos/branches/vendors-mit-korr .
U  meinproj/foo.txt
U  meinproj/bar.txt
U  meinproj/baz.c
U  meinproj/qux.c
Aktualisiert auf Revision 31.
</shell>

<textblock>Und um zurückzuwechseln geben brauchen sie nur die URL
angeben von der sie ihre Arbeitskopie ursprünglich
augecheckt haben:</textblock>

<shell>
$ svn switch http://svn.red-bean.com/repos/trunk/vendors .
U  meinproj/foo.txt
U  meinproj/bar.txt
U  meinproj/baz.c
U  meinproj/qux.c
Aktualisiert auf Revision 31.
</shell>

<tip>
<hint>Sie können auch einzelne Teile ihrer Arbeitskopie
auf einen Zweig (branch) umstellen, wenn sie nicht die
ganze Arbeitskopie umstellen wollen.</hint>
</tip>

<textblock>Wenn die URL von ihrem Projektarchiv wechselt und sie
haben eine bestehende Arbeitskopie, die sie
weiterbenutzen möchten, dann können sie die <command>svn
switch --relocate</command> Option verwenden, um ihre
Arbeitskopie von einer URL auf eine andere
umzustellen:</textblock>

<shell>
$ svn checkout file:///tmp/repos test
A  test/a
A  test/b
...

$ mv repos newlocation
$ cd test/

$ svn update
svn: Unable to open an ra_local session to URL
svn: Unable to open Projektarchiv 'file:///tmp/repos'

$ svn switch --relocate file:///tmp/repos file:///tmp/newlocation .
$ svn update
Bei Revision 3.
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svn update -- Aktualisiert ihre Arbeitskopie.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svn update [PFAD...]</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock><command>svn update</command> überträgt die Änderungn
vom Projektarchiv in ihre Arbeitskopie.  Wenn keine
Revision angegeben wurde, dann wird ihre Arbeitskopie mit
der <italic>HEAD</italic> Revision aktualisiert.
Andernfalls wird die Arbeitskopie auf den Stand der
Revision gebracht, die an die <command>--revision</command>
Option übergegeben wird.</textblock>

<textblock>Für jedes aktualisierte Objekt wird wird eine Zeile ausgegeben, 
die mit einem Buchstabn für die durchgeführte Aktion beginnt.
Diese haben die folgende Bedeutung:</textblock>




<textblock>A</textblock>

<quotation>Hinzugefügt (Added)</quotation>




<textblock>D</textblock>

<quotation>Gelöscht (Deleted)</quotation>




<textblock>U</textblock>

<quotation>Aktualisiert (Updated)</quotation>




<textblock>C</textblock>

<quotation>Konflikt (Conflict)</quotation>




<textblock>G</textblock>

<quotation>Zusammengeführt (Merged)</quotation>





<textblock>Ein Buchstabe in der ersten Spalte bedeutet eine
Aktualisierung der Datei, während Aktualisierungen der
Dateieigenschaften in der zweiten Spalte angezeigt
werden.</textblock>


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>up</textblock>


<textblock>
<strong>Ändert</strong></textblock>
<textblock>Arbeitskopie</textblock>


<textblock>
<strong>Archivzugriff</strong></textblock>
<textblock>Ja</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r) REV
--non-recursive (-N)
--quiet (-q)
--diff3-cmd CMD
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Übernehme Änderungen vom Projektarchiv, die seit der
letzten Aktualisierung dort vorgenommen wurden:</textblock>

<shell>
$ svn update
A  neudir/toggle.c
A  neudir/disclose.c
A  neudir/launch.c
D  neudir/README
Aktualisiert auf Revision 32.
</shell>

<textblock>Sie können ihre Arbeitskopie auch mit einer älteren
Revision aktualisieren (Subversion hat kein Konzept von
<italic>sticky</italic> (klebrigen) Dateien, so wie CVS dies
kennt; siehe <xref linkend="svn-ap-a"/>):</textblock>

<shell>
$ svn update -r30
A  neudir/README
D  neudir/toggle.c
D  neudir/disclose.c
D  neudir/launch.c
U  foo.c
Aktualisiert auf Revision 30.
</shell>

<tip>
<hint>Wenn sie eine ältere Revision einer einzelnen Datei
anschauen wollen, sollten sie <command>svn
cat</command> benutzen.</hint>
</tip>



 </section>
 </split>

<!-- ================================================================= -->
<!-- ======================== SECTION 2 ============================== -->
<!-- ================================================================= -->

 <split>
  <section>
   <heading>
svnadmin
   </heading>

<textblock><command>svnadmin</command> ist das Adminstrations-Werkzeug
zum Überprüfen und Reparieren des Projektarchives.  Für
detailiertere Information, siehe <xref
linkend="svn-ch-5-sect-3.1.2"/>.</textblock>

<textblock>Da <command>svnadmin</command> direkt auf das Projektarchiv
zugreift (und nur auf der Maschine verwendet werden kann, auf
der sich das Projektarchiv befindet), wird das Projektarchiv als
Pfad und nicht als URL angegeben.</textblock>

<section>
<heading><command>svnadmin</command> Optionen</heading> 




<textblock><command>--bdb-log-keep</command></textblock>

<quotation>(Spezifisch für die Berkeley Datenbank) Schaltet das
automatische Löschen der Datenbank Logdateien
ab.</quotation>




<textblock><command>--bdb-txn-nosync</command></textblock>

<quotation>(Spezifisch für die Berkeley Datenbank) Schaltet
fsync ab, wenn Datenbank Transaktionen übertragen
werden.</quotation>




<textblock><command>--bypass-hooks</command></textblock>

<quotation>Umgehe das Hakensystem des Projektarchivs.</quotation>




<textblock><command>--clean-logs</command></textblock>

<quotation>Entferne unbenutzte Berkeley DB Logdateien.</quotation>



<!-- TODO config-dir? Is it really used? -->


<textblock><command>--force-uuid</command></textblock>

<quotation>Standardmässig wird <command>svnadmin</command> beim
Laden von Daten in ein Projektarchiv, das bereits
Revisionen enthält die <italic>UUID</italic> Angaben
im importierten 'Dump' ignorieren.  Diese Option
bewirkt, dass die <italic>UUID</italic> des 'Dump' in
das Projektarchiv übernommen wird.</quotation>




<textblock><command>--ignore-uuid</command></textblock>

<quotation>Standardmässig wird <command>svnadmin</command> beim
Laden in ein leeres Projektarchiv die
<italic>UUID</italic> vom importierten 'Dump'
übernehmen.  Diese Option bewirkt, dass diese UUID
ignoriert wird.</quotation>




<textblock><command>--incremental</command></textblock>

<quotation>Dump a Revision only as a diff against the
previous Revision, instead of the usual
fulltext.</quotation>




<textblock><command>--parent-dir
<italic>DIR</italic></command></textblock>

<quotation>Wenn eine 'Dump' Datei geladen wird, dann wird als
Basisverzeichnis <italic>DIR</italic> genommen
anstatt <italic>/</italic>.</quotation>




<textblock><command>--Revision</command> (<command>-r</command>)
<italic>ARG</italic></textblock>

<quotation>Gibt die zu verwendende Revision an.</quotation>




<textblock><command>--quiet</command></textblock>

<quotation>Zeige keine normalen Prozessausgaben, sondern nur
Fehler.</quotation>



</section>

<!-- ================================================================= -->
<section>
<heading><command>svnadmin</command> Subcommands</heading>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnadmin create -- Erzeugt ein neues, leeres Projektarchiv im
<italic>ARCHIV_PFAD</italic>.
</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnadmin create ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Erzeugt ein neues, leeres Projektarchiv im angegeben
Pfad.  Wenn das angegebene Verzeichnis nicht existiert,
wird es angelegt.  <footnote><para>Zur Erinnerung:
<command>svnadmin</command> arbeitet nur mit lokalen
<emphasis>Pfadangaben</emphasis> und nicht mit
<emphasis>URL</emphasis>s.</para></footnote></textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--bdb-txn-nosync
--bdb-log-keep
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Das Erstellen eines neuen Projektarchiv ist sehr
einfach:</textblock>

<shell>
$ svnadmin create /usr/local/svn/repos
</shell>


</refentry>


<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock></textblock>
<textblock>svnadmin dump -- Gibt den Inhalt des Dateienystems im
'Dump'-Format aus.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnadmin dump ARCHIV_PFAD [-r VON[:BIS]] [--incremental]</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Gibt den Inhalt des Dateisystems in einem portablen
'Dump'-Format auf die Standardausgabe (stdout) aus.
Rückmeldungen gehen an die Standardfehlerausgabe (stderr).
Gibt die Revisionen <italic>VON</italic>:
<italic>BIS</italic> aus.  Wenn keine Revisionen
angegeben werden, dann werden alle Revisionen ausgegeben.
Wenn nur <italic>VON</italic> angegeben wird,
dann wird nur diese eine Revision ausgegeben.  Siehe <xref
linkend="svn-ch-5-sect-3.5"/> für praktische
Beispiele.</textblock>

<textblock>
<strong>Optionen</strong>

<screen>
--Revision (-r)
--incremental
--quiet
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Gibt das ganze Projektarchiv aus:</textblock>

<shell>
$ svnadmin dump /usr/local/svn/repos
SVN-fs-dump-format-version: 1
Revision-number: 0
* Dumped Revision 0.
Prop-content-length: 56
Content-length: 56
...
</shell>

<textblock>Inkrementelle Ausgabe einer einzelnen Transaktion aus
dem Projektarchiv: </textblock>

<shell>
$ svnadmin dump /usr/local/svn/repos -r 21 --incremental 
* Dumped Revision 21.
SVN-fs-dump-format-version: 1
Revision-number: 21
Prop-content-length: 101
Content-length: 101
...
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock></textblock>
<textblock>svnadmin help -- 

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnadmin help [SUBKOMMANDO...]</command></textblock>


<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Dieses Subkommando ist hilfreich, wenn sie in sich auf
einer einsamen Insel und weder eine Internetverbindung
noch dieses Buch zur Verfügung haben.</textblock>



<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>?, h</textblock>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnadmin hotcopy -- Erstellt eine Kopie des Projektarchivs im
laufenden Betrieb.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnadmin hotcopy ALTER_ARCHIV_PFAD NEUER_ARCHIV_PFAD</command></textblock>


<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Das Subkommando erstellt eine volle Sicherung des
Projektarchives im <italic>laufenden</italic> Betrieb,
inklusive aller Haken, Konfigurations-Dateien und
natürlich der Datenbank-Dateien.  Wenn sie die
<italic>--clean-logs</italic> Option angeben, wird
<command>svnadmin</command> die Kopie des Projektarchivs
erstellen und dann die unbenutzen Berkeley DB Logdateien
vom ursprünglichen Projektarchiv entfernen.</textblock>



<textblock>
<strong>Optionen</strong></textblock>

<screen>
--clean-logs
</screen>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnadmin list-dblogs -- Listet die Berkeley DB Logdateien, die für das angegebene
Projektarchiv existieren.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnadmin list-dblogs ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Die Berkeley Datenbank erzeugt Logdateien über alle
Änderungen am Projektarchiv, um damit eine
Wiederherstellung nach einer Katastrophe zu ermöglichen.
Solange sie nicht <italic>DB_LOGS_AUTOREMOVE</italic>
einschalten, werden die Logdateien immer mehr werden,
obwohl die meisten davon nicht mehr benötigt werden und
gelöscht werden können, um Plattenplatz freizugeben.
Siehe <xref linkend="svn-ch-5-sect-3.3"/> für weitere
Informationen.</textblock> 


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnadmin list-unused-dblogs -- Listet die Berkeley DB Logdateien, die gefahrlos
gelöscht werden können.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnadmin list-unused-dblogs ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Die Berkeley Datenbank erzeugt Logdateien über alle
Änderungen am Projektarchiv, um damit eine
Wiederherstellung nach einer Katastrophe zu ermöglichen.
Solange sie nicht <italic>DB_LOGS_AUTOREMOVE</italic>
einschalten, werden die Logdateien immer mehr werden,
obwohl die meisten davon nicht mehr benötigt werden und
gelöscht werden können, um Plattenplatz freizugeben.
Siehe <xref linkend="svn-ch-5-sect-3.3"/> für weitere
Informationen.</textblock> 


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Entferne alle unbenutzten Logdateien vom Projektarchiv:</textblock>

<shell>
$ svnadmin list-unused-dblogs /path/to/repos
/path/to/repos/log.0000000031
/path/to/repos/log.0000000032
/path/to/repos/log.0000000033

$ svnadmin list-unused-dblogs /path/to/repos | xargs rm
## disk space reclaimed!
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnadmin load --  Liest einen Stream im
<italic>'Dump'-Format</italic> von der Standardeingabe ein.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnadmin load ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Liest einen Stream im <italic>'Dump'-Format</italic> von
der Standardeingabe (stdin) ein und überträgt neue
Revisionen in das Dateienystem des Projektarchivs.
Sendet Prozessinformationen an die Standardausgabe
(stdout).</textblock> 


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--quiet (-q)
--ignore-uuid
--force-uuid
--parent-dir
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Hier wird ein Projektarchiv von einer Sicherungsdatei
(welche natürlich mit <command>svn dump</command> erstellt
worden ist) geladen:</textblock>

<shell>
$ svnadmin load /usr/local/svn/restored &lt; repos-backup
&lt;&lt;&lt; Started new txn, based on original Revision 1
* adding path : test ... done.
* adding path : test/a ... done.
...
</shell>

<textblock>Oder wenn sie in ein Unterverzeichnis laden wollen:</textblock>

<shell>
$ svnadmin load --parent-dir neu/unterverz/fuer/project /usr/local/svn/restored &lt; repos-backup
&lt;&lt;&lt; Started new txn, based on original Revision 1
* adding path : test ... done.
* adding path : test/a ... done.
...
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnadmin lstxns -- Gibt die Namen aller hängengebliebenen Transaktionen aus.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnadmin lstxns ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Gibt die Namen aller hängengebliebenen
Transaktionen aus.  Siehe <xref
linkend="svn-ch-5-sect-3.2"/> für Informationen wie solche
hängengebliebenen Transaktionen entstehen und was sie
damit machen sollten.</textblock>



<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Listet alle hängengebliebenen Transaktionen für ein
Projektarchiv.</textblock>

<shell>
$ svnadmin lstxns /usr/local/svn/repos/ 
1w
1x
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnadmin recover -- Stellt verlorengegangene Statusinformationen im Projektarchiv wieder her.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnadmin recover ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Verwenden sie dieses Kommando, wenn sie eine
Fehlermeldung bekommen, die darauf hinweist, dass ihr
Projektarchiv eine Wiederherstellung benötigt.</textblock>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Wiederherstellung eines hängengebliebenen Projektarchivs:</textblock>

<shell>
$ svnadmin recover /usr/local/svn/repos/ 
Setze exklusive Sperre für Projektarchiv db.
Wiederherstellung läuft, bitte warten...
Wiederherstellung komplett.
Die aktuellste Revision im Projektarchiv ist 34.
</shell>


</refentry>

<!-- ================================================================= -->

<textblock><strong>Name</strong></textblock>
<textblock>svnadmin rmtxns -- Löscht Transaktionen vom Projektarchiv.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnadmin rmtxns ARCHIV_PFAD TXN_NAME...</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Löscht hängengebliebene Transaktionen vom Projektarchiv.
Dies wird im Detail besprochen in <xref
linkend="svn-ch-5-sect-3.2"/>.</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--quiet (-q)
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Löscht benannte Transaktionen:</textblock>

<shell>
$ svnadmin rmtxns /usr/local/svn/repos/ 1w 1x
</shell>

<textblock>Glücklicherweise lässt sich die Ausgabe von
<command>svn lstxns</command> hervorragend für die EIngabe
von rmtxns verwenden:</textblock>

<shell>
$ svnadmin rmtxns /usr/local/svn/repos/  `svnadmin lstxns /usr/local/svn/repos/`
</shell>

<textblock>Womit alle hängengebliebenen Transaktionen vom
Projektarchiv entfernt werden.</textblock>


</refentry>


<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnadmin setlog -- Set the log-message on a Revision.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnadmin setlog ARCHIV_PFAD -r REVISION DATEI</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Setzt die Log-Nachricht für Revision REVISION auf den
Inhalt der Datei DATEI.</textblock>

<textblock>Das ist ähnlich wie die Verwendung von <command>svn
propset --revprop</command> um die
<italic>svn:log</italic> Eigenschaft für eine Revision
zu setzen, mit dem Unterschied, dass sie auch die Option
<command>--bypass-hooks</command> verwenden können, um zu
verhindern, dass irgendwelche pre- oder post-commit Haken
ausgeführt werden, was nützlich ist, wenn die Änderung von
Eigenschaften der Revision nicht mittels
pre-revprop-change Haken ermöglicht wurde.</textblock>

<warning> 
<hint>Eigenschaften einer Revision stehen nicht unter
Versionskontrolle, sodass die vorherige Log-Nachricht
verlorengeht.</hint>
</warning>



<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r) ARG
--bypass-hooks
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Setzt Die Log-Nachricht für die Revision 19 auf den
Inhalt der Datei <path>msg</path>:</textblock>

<shell>
$ svnadmin setlog /usr/local/svn/repos/ -r 19 msg
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnadmin verify -- Überprüft die Daten im Projektarchiv.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnadmin verify ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Lassen sie dieses Kommando laufen, wenn sie die
Integrität des Projektarchivs überprüfen wollen.  Intern
geschieht dies, indem alle Revisionen im Projektarchiv wie
bei der Ausgbe des 'Dump'-Formats behandelt werden, die
Ausgabe jedoch unterdrückt wird.</textblock>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Überprüft ein hängengebliebenes Projektarchiv:</textblock>

<shell>
$ svnadmin verify /usr/local/svn/repos/ 
* Revision 1729 überprüft.
</shell>


</refentry>

</section>

</section>
 </split>

<!-- ================================================================= -->
<!-- ======================== SECTION 3 ============================== -->
<!-- ================================================================= -->
<split>
  <section>
   <heading><command>svnlook</command></heading>

<textblock><command>svnlook</command> ist ein Kommandozeilen-Werkzeug
um verschiedene Aspekte eines Subversion Projektarchives zu
untersuchen.  Es macht keine Änderunge am Projektarchiv &mdash;
es dient nur zum <italic>Nachschauen</italic>.
<command>svnlook</command> wird typischerweise bei Haken im
Projektarchiv verwendet, kann aber auch für Diagnosezwecke bei
der Administration des Projektarchives nützlich sein.</textblock>

<textblock>Da <command>svnlook</command> direkt auf das Projektarchiv
zugreift (und nur auf der Maschine verwendet werden kann, auf
der sich das Projektarchiv befindet), wird das Projektarchiv als
Pfad und nicht als URL angegeben.</textblock>

<textblock>Wenn keine Revision oder Transaktion angegeben wird, dann
verwendet <command>svnlook</command> die aktuellste Revision im
Projektarchiv.</textblock>

<section>
<heading><command>svnlook</command>Optionen</heading>

<textblock>Optionen für <command>svnlook</command> sind global, so
wie bei <command>svn</command> und
<command>svnadmin</command>, obwohl die meisten Optionen nur
bei einem einzigen Subkommando angewendet werden können, da
<command>svnlook</command> (absichtlich) in seinem Rahmen
eingeschränkt ist.</textblock>




<textblock><command>--no-diff-deleted</command></textblock>

<quotation>Verhindert, dass <command>svnlook</command>
Unterschiede für gelöschte Dateien ausgibt.
Standardmässig werden für eine Datei, die in einer
Transaktion/Revision gelöscht wurde, die gleichen
Unterschiede ausgegeben, als wie wenn die Datei weiter
bestehen würde, jedoch der ganze Inhalt gelöscht worden
wäre.</quotation>




<textblock><command>--Revision</command>
(<command>-r</command>)</textblock>

<quotation>Gibt eine bestimmte Revision an, die untersucht
werden soll.</quotation>




<textblock><command>--Transaktion</command>
(<command>-t</command>)</textblock>

<quotation>Gibt eine bestimmte Transaktions-ID an, die
untersucht werden soll. </quotation>




<textblock><command>--show-ids</command></textblock>

<quotation>Zeigt die Dateienystemknoten Revisions-IDs für jeden
Pfad im Dateienystembaum.</quotation>





</section>

<!-- ================================================================= -->
<section>
<heading><command>svnlook</command></heading>

<textblock><strong>Name</strong></textblock>
<textblock>svnlook author -- Gibt den/die AutorIn aus.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnlook author ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Gibt die Autorenschaft einer Revision oder Transaktion im
Projektarchiv aus.</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r)
--Transaktion (-t)
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock><command>svnlook author</command> ist nützlich, aber
nicht sehr spannend:</textblock>

<shell>
$ svnlook author -r 40 /usr/local/svn/repos 
sally
</shell>            


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnlook cat -- Gibt den Inhalt einer Datei aus.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnlook cat ARCHIV_PFAD PFAD_IM_ARCHIV</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Gibt den Inhalt einer Datei aus.</textblock>



<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r)
--Transaktion (-t)
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Dies zeigt den Inhalt der Datei
<path>/trunk/README</path> in der Transaktion
<italic>ax8</italic>:</textblock>

<shell>
$ svnlook cat -t ax8 /usr/local/svn/repos /trunk/README

Subversion, a version control system.
=====================================

$LastChangedDate: 2003-07-17 10:45:25 -0500 (Thu, 17 Jul 2003) $

Contents:

I. A FEW POINTERS
II. DOCUMENTATION
III. PARTICIPATING IN THE SUBVERSION COMMUNITY
...
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnlook changed -- Zeigt die Pfade an die geändert wurden.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnlook changed ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt die Pfande an, die in einer bestimmten Revision
oder Transaktion geändert wurden, sowie einen Buchstaben
im Stil der <italic>svn update</italic> Statuskennungen in
der ersten Spalte: <italic>A</italic> für hinzugefügt
(added), <italic>D</italic> für gelöscht (deleted) und
<italic>U</italic> für geändert (updated).</textblock>



<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r)
--Transaktion (-t)
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Dies zeigt eine Liste mit allen Dateien, die in
Revision 39 im Projektarchiv geändert wurden:</textblock>

<shell>
$ svnlook changed -r 39 /usr/local/svn/repos
A   trunk/vendors/deli/
A   trunk/vendors/deli/chips.txt
A   trunk/vendors/deli/sandwich.txt
A   trunk/vendors/deli/pickle.txt
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnlook date -- Gibt den Zeitstempel aus.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnlook date ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Gibt den Zeitstempel einer Revision oder Transaktion 
im Projektarchiv aus.</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r)
--Transaktion (-t)
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Dies zeigt Datum und Uhrzeit der Revision 40 
aus dem Projektarchiv:</textblock>

<shell>            
$ svnlook date -r 40 /tmp/repos/
2003-02-22 17:44:49 -0600 (Sat, 22 Feb 2003)
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnlook diff -- Zeigt Unterschiede von geänderten Dateien und Eigenschaften.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnlook diff ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt Unterschiede von geänderten Dateien und Eigenschaften
aus dem Projektarchiv im GNU-Stil.</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r)
--Transaktion (-t)
--no-diff-deleted
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Dies zeigt eine neu hinzugefügte (leere) Datei, eine
gelöschte und eine kopierte Datei:</textblock>

<shell>
$ svnlook diff -r 40 /usr/local/svn/repos/
Copied: egg.txt (from rev 39, trunk/vendors/deli/pickle.txt)

Hinzugefügt: trunk/vendors/deli/soda.txt
==============================================================================

Geändert: trunk/vendors/deli/sandwich.txt
==============================================================================
--- trunk/vendors/deli/sandwich.txt	(original)
+++ trunk/vendors/deli/sandwich.txt	2003-02-22 17:45:04.000000000 -0600
@@ -0,0 +1 @@
+Don't forget the mayo!

Gelöscht: trunk/vendors/deli/chips.txt
==============================================================================

Gelöscht: trunk/vendors/deli/pickle.txt
==============================================================================
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnlook dirs-changed -- Zeigt geänderte Verzeichnissen an.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnlook dirs-changed ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt Verzeichnissen an, die geändert wurden
(bearbeitete Eigenschaften) oder deren Dateien geändert
wurden.</textblock> 

<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r)
--Transaktion (-t)
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Dies zeigt die Verzeichnisse, die in der Revision 40
in unserem einfachen Projektarchiv geändert wurden:</textblock>

<shell>
$ svnlook dirs-changed -r 40 /usr/local/svn/repos
trunk/vendors/deli/
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnlook help  -- 

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>Auch svnlook -h oder svnlook -?.</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt den Helptext für svnlook.  Dieses Kommando ist,
ebenso wie <command>svn help</command>, ihr bester Freund,
auch wenn sie ihn nie anrufen oder zu ihrer Party
einladen.</textblock> 


<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>?, h</textblock>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnlook history -- Zeigt Informationen über die Historie von einem
Pfad im Projektarchiv (oder vom Basisverzeichnis wenn kein
Pfad angegeben wird).
</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnlook history ARCHIV_PFAD 
[PFAD_IN_REPOS]</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt Informationen über die Historie von einem Pfad
im Projektarchiv (oder vom Basisverzeichnis wenn kein Pfad
angegeben wird).</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r)
--show-ids
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Dies zeigt die Historie für den Pfad
<path>/tags/1.0</path> ab Revision 20 in unserem
einfachen Projektarchiv.</textblock>

<shell>
$ svnlook history -r 20 /usr/local/svn/repos /tags/1.0 --show-ids
REVISION   PFAD &lt;ID&gt;
--------   ---------
19   /tags/1.0 &lt;1.2.12&gt;
17   /branches/1.0-rc2 &lt;1.1.10&gt;
16   /branches/1.0-rc2 &lt;1.1.x&gt;
14   /trunk &lt;1.0.q&gt;
13   /trunk &lt;1.0.o&gt;
11   /trunk &lt;1.0.k&gt;
9   /trunk &lt;1.0.g&gt;
8   /trunk &lt;1.0.e&gt;
7   /trunk &lt;1.0.b&gt;
6   /trunk &lt;1.0.9&gt;
5   /trunk &lt;1.0.7&gt;
4   /trunk &lt;1.0.6&gt;
2   /trunk &lt;1.0.3&gt;
1   /trunk &lt;1.0.2&gt;
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnlook info -- Zeigt AutorIn, Datumstempel, Grösse der
Log-Nachricht und Log-Nachricht.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnlook info ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt AutorIn, Datumstempel, Grösse der Log-Nachricht
und Log-Nachricht.</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r)
--Transaktion (-t)
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Dies zeigt die Information über die Revision 40 in
unserem einfachen Projektarchiv.</textblock>

<shell>
$ svnlook info -r 40 /usr/local/svn/repos
sally
2003-02-22 17:44:49 -0600 (Sat, 22 Feb 2003)
15
Menü umgekrempelt.
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnlook log -- Zeigt die Log-Nachricht.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnlook log ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt die Log-Nachricht.</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r)
--Transaktion (-t)
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Dies zeigt die Log-Nachricht für die Revision 40 in
unserem einfachen Projektarchiv:</textblock>

<shell>
$ svnlook log /tmp/repos/
Menü umgekrempelt.
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnlook propget -- Zeigt den Wert einer Eigenschaft für einen
Pfad im Projektarchiv.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnlook propget ARCHIV_PFAD PROPNAME PFAD_IM_ARCHIV</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt den Wert einer Eigenschaft für einen Pfad im
Projektarchiv.</textblock>



<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>pg, pget</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r)
--Transaktion (-t)
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Dies zeigt den Wert der Eigenschaft 'Gewuerz' für die
Datei <path>/trunk/sandwich</path> in der
<italic>HEAD</italic> Revision:</textblock>

<shell>
$ svnlook pg /usr/local/svn/repos Gewuerz /trunk/sandwich
Senf
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnlook proplist -- Zeigt Namen und Werte von Eigenschaften für
Dateien und Verzeichnisse im Projektarchiv.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnlook proplist ARCHIV_PFAD PFAD_IM_ARCHIV</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt die Namen der Eigenschaften eines Pfades im
Projektarchiv.  Mit <command>--verbose</command> wird auch
der Wert der Eigenschaft angezeigt.</textblock>



<textblock>
<strong>Alternative Namen</strong></textblock>
<textblock>pl, plist</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r)
--Transaktion (-t)
--verbose (-v)
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Dies zeigt die Namen der Eigenschaften für die Datei
<path>/trunk/README</path> in der
<italic>HEAD</italic> Revision:</textblock>

<shell>
$ svnlook proplist /usr/local/svn/repos /trunk/README
original-author
svn:mime-type
</shell>

<textblock>Dies ist das gleiche Kommando wie im vorigen Beispiel,
aber diesmal werden die Werte der Eigenschaften auch
angezeigt:</textblock>

<shell>
$ svnlook proplist --verbose /usr/local/svn/repos /trunk/README
original-author : fitz
svn:mime-type : text/plain
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnlook tree -- Zeigt die Baumstruktur</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnlook tree ARCHIV_PFAD [PFAD_IM_ARCHIV]</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt die Baumstruktur des Projektarchives beginnend
mit <italic>PFAD_IM_ARCHIV</italic> (wenn
angegeben, andernfalls an der Basis), sowie optional die
Knoten-IDs der Revisionen.</textblock>


<textblock>
<strong>Optionen</strong></textblock>

<screen>
--Revision (-r)
--Transaktion (-t)
--show-ids
</screen>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Dies zeigt die Baumstruktur (mit Knoten-IDs) für die
Revision 40 in unserem einfachen Projektarchiv:</textblock>

<shell>
$ svnlook tree -r 40 /usr/local/svn/repos --show-ids
/ &lt;0.0.2j&gt;
trunk/ &lt;p.0.2j&gt;
vendors/ &lt;q.0.2j&gt;
deli/ &lt;1g.0.2j&gt;
egg.txt &lt;1i.e.2j&gt;
soda.txt &lt;1k.0.2j&gt;
sandwich.txt &lt;1j.0.2j&gt;
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnlook uuid -- Zeigt die <italic>UUID</italic> des
Projektarchives.</textblock>

<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnlook uuid ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt die <italic>UUID</italic> des Projektarchives.
Die UUID ist die <emphasis>U</emphasis>niversal
<emphasis>U</emphasis>nique
<emphasis>ID</emphasis>entifier des Projektarchives.  Der
Subversion Client benutzt diese Identifier um verschiedene
Projektarchiven voneinander zu unterscheiden.</textblock>


<textblock>
<strong>Beispiele</strong></textblock>

<shell>          
$ svnlook uuid /usr/local/svn/repos
e7fe1b91-8cd5-0310-98dd-2f12e793c5e8
</shell>


</refentry>

<!-- ================================================================= -->
<textblock><strong>Name</strong></textblock>
<textblock>svnlook youngest -- Zeigt die neueste Revisionsnumber.</textblock>
<textblock>
<strong>Übersicht</strong></textblock>
<textblock><command>svnlook youngest ARCHIV_PFAD</command></textblock>

<textblock>
<strong>Beschreibung</strong></textblock>

<textblock>Zeigt die neueste Revisionsnumber eines Projektarchives.</textblock>


<textblock>
<strong>Beispiele</strong></textblock>

<textblock>Dies zeigt die neueste Revisionsnummer für unser
einfaches Projektarchiv:</textblock>

<shell>          
$ svnlook youngest /tmp/repos/ 
42
</shell>


</refentry>

</section>
</section>
 </split>
</chapter>