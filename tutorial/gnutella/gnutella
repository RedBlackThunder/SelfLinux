<?xml version="1.0" encoding="iso-8859-1"?>

<chapter>

<title>Gnutella Filesharing Clients</title>

<author>
 <name>Arnulf Pelzer</name>
 <mailto>webmaster@arnulfpelzer.de</mailto>
</author>

<layout>
 <name>Gabriel Welsche</name>
 <mailto>ai114@gmx.de</mailto>
</layout>

 <license>
  GFDL
 </license>

<index>gnutella</index>

<description>
 <textblock>
In diesem Kapitel werden zwei Gnutella Clients vorgestellt.
Die Grundlagen verschiedener Peer-To-Peer sind in einem 
eigenständigen Kapitel ausführlich erläutert.
 </textblock>
</description>


<split>
<!-- *. Kapitel -->
  <section>
   <heading>
	Peer-to-Peer Filesharing bei Gnutella
   </heading>

        <!--	<quotation>
Hier steht: XML ist <strong>das</strong>
Dokumentationsformat 
	</quotation>-->

   <textblock>
Gnutella  funktioniert wie ein eigenes, separates Netzwerk. Nur die
Benutzer, die in diesem Netzwerk verbunden sind, können Dateien
tauschen. Deshalb muss man sich ein Filesharingprogramm
installieren.
   </textblock>

   <textblock>
Dieses Programm ist ein so genannter
Filesharingclient, der normalerweise zuerst die freigegebenen
Unterverzeichnisse durchsucht und eine Fileliste erstellt. Verbindet
man sich mit dem Netzwerk, wird der so genannte Host-Cache Server
abgefragt, der nicht mehr ist, als eine Sammlung gerade verbundener
Rechner. Ist man mit einem dieser Rechner verbunden, steht einem das
ganze Netzwerk zur Verfügung. Die Anzahl der Rechner, mit denen man
fest verbunden ist, kann man einstellen. Man ist selbst auch als Teil des
Netzwerkes als Verbindungspunkt nutzbar.
   </textblock>
   
   <textblock>
Stellt man nun eine
Suchanfrage, wird diese an jeden Rechner, mit dem man verbunden ist,
weitergeleitet. Jeder dieser Rechner gibt
die Suchanfrage an die mit ihm verbundenen Rechner weiter und so fort.
Um nicht endlos zu suchen gibt es die so genannte TTL (Time To Live),
ein Zähler der bei jedem Verbindungsrechner um eins reduziert wird
bis er auf Null steht. Ist Null erreicht, wird die Suchanfrage nicht mehr
ausgeführt. Bei einer erfolgreichen Suche geht die Meldung den gleichen Weg
zurück. Der eigentliche Austausch der Daten wird auf dem direkten Weg
ausgeführt und erfolgt nicht über das Peer-2-Peer Netzwerk.
   </textblock>
  </section>
 </split>

 <split>
<!-- *. Kapitel -->
  <section>
   <heading>
Der Gnutella-Client LimeWire
   </heading>

   <hint>
LimeWire finden sie unter auf der 
 <ref lang="en" url="http://www.limewire.org" >LimeWire Homepage</ref>.
   </hint>

   <textblock>
LimeWire ist ein Filesharingprogramm das unter der GPL steht, in Java
geschrieben ist und deshalb unter jedem Betriebssystem ablaufen kann.
Die Linuxversion
gibt es in drei Varianten. Einmal als tar.gz Version (Quellcode), 
einem gepackten
Unterverzeichnis mit einer nach dem Entpacken lauffähigen englischen
Menüführung. Zweitens einer binären Version mit Installationsmenü, die es
ermöglicht, LimeWire in verschiedenen Sprachen zu installieren. Die
dritte Version, pro genannt, ist die kommerzielle Version ohne
Werbebanner.
   </textblock>

<!-- *.* Kapitel -->   
   <section>
	<heading>
LimeWire Installation
	</heading>

	<textblock>
Grundlage der Installation ist eine lauffähige Javaumgebung ab der
Version 1.3.1 
   <ref lang="en" url="http://java.sun.com/j2se/1.3/jre"></ref>,
eine bestehende
Internetverbindung und XFree86.
	</textblock>

<!-- *.* Kapitel -->
	<section>
	 <heading>
Tar.gz Version
	 </heading>

	 <textblock>
Man entpackt den Quellcode mit 
<command>tar -xvzf LimeWireLinux.tgz</command>
an geeigneter Stelle und kompiliert ihn wie gewohnt.
	 </textblock>
	</section>

<!-- *.* Kapitel -->	
	<section>
	 <heading>
	  Pro-Version mit Installationsmenü
	 </heading>

	 <textblock>
Die Installation mit Menüführung startet mit der Sprachauswahl,
	 </textblock>
	 
	 <image height="250">
	  <title>LimeWire Startbildschirm</title>
	  <filename>LimeWire_Startbildschirm.png</filename>
	 </image>

	 <textblock>
in der sie aus mehreren Sprachen, auch Deutsch, auswählen
können, gefolgt von einem Hinweisfenster
	 </textblock>

	 <image height="250">
	 <title>Hinweisfenster</title>
	  <filename>LimeWire_Installations1.png</filename>
	 </image>

	 <textblock>
	  Der nächste Schritt legt das Zielverzeichnis fest.
	 </textblock>

	 <image height="250">
	  <filename>LimeWire_Installations2.png</filename>
	  <title>drittes Installationsfenster</title>
	 </image>

	 <textblock>
Vor der eigentlichen Installation bekommen Sie eine Zusammenfassung
angezeigt, wo und wie LimeWire sich in Ihrem System eingerichten
wird.
	 </textblock>

	 <image height="250">
	  <filename>LimeWire_Installations3.png</filename>
	  <title>Hinweisfenster</title>
	 </image>

	 <textblock>
	  Sie haben nun LimeWire erfolgreich installiert
	 </textblock>

	 <image height="250">
	  <filename>LimeWire_Installations5.png</filename>
	  <title>Hinweisfenster</title>
	 </image>

	 <textblock>
und nun ist es an der Zeit, LimeWire zu starten. Dazu dient das
Script <command>runLime.sh</command>, das sich im Installationsverzeichnis befindet.
Beim ersten Start werden noch einige Einstellungen abgefragt,
einmal das Verzeichnis, das geteilt werden soll
	 </textblock>

	 <image height="250">
	  <filename>LimeWire_Setup2.png</filename>
	  <title>Setupfenster</title>
	 </image>

	 <textblock>
Hier sollten sie ein Verzeichnis angeben auf das nur sie
Zugriff haben, keinesfalls jedoch der User root oder andere User
mit einem hohem Zugriffsrecht. Als nächstes wird noch die
Geschwindigkeit der Verbindung angegeben.
	 </textblock>

	 <image height="250">
	  <filename>LimeWire_Setup3.png</filename>
	  <title>Setupfenster</title>
	 </image>

	 <textblock>
das wars dann auch schon. Nun sollten sie ein lauffähiges
LimeWire ihr Eigen nennen können.
	 </textblock>
	</section>
   </section>

<!-- *. Kapitel -->
   <section>
	<heading>
Verwendung des Programms LimeWire
	</heading>

	<textblock>
Über ein X-Terminal wechselt man in das Unterverzeichnis und
startet LimeWire mit: <command>sh runLime.sh</command> . Um die grundlegenden
Einstellungen machen zu können, wählt man im Menü Hilfsmittel den
Punkt Optionen an.
	</textblock>

	<image height="250">
	 <filename>LimeWire_EinstellungenPfad.png</filename>
	 <title>Pfad Einstellungen</title>
	</image>

	<textblock>
Dort kann man dann alle Optionen, die einem sinnvoll erscheinen,
einstellen. Die wichtigsten Einstellungen sind die geteilten
Ordner
	</textblock>

	<image height="250">
	 <filename>LimeWire_GeteilteOrdner.png</filename>
	 <title>Einstellung der geteilten Ordner</title>
	</image>

	<textblock>
und die Einstellungen der Geschwindigkeit.
	</textblock>

	<image height="250">
	 <filename>LimeWire_Geschwindigkeit.png</filename>
	 <title>Einstellungen der Geschwindigkeit</title>
	</image>

	<textblock>
Wenn dann die Einstellungen alle beendet sind, kann man sein
LimeWire in Aktion bewundern.
	</textblock>
   </section>
  </section>
 </split>

<split>
<!-- *. Kapitel -->
  <section>
   <heading>
GTK-Gnutella
   </heading>

   <textblock>
GTK-Gnutella finden sie unter <ref lang="en" url="http://gtk-gnutella.sourceforge.net"> http://gtk-gnutella.sourceforge.net </ref>. GTK-Gnutella ist ein Gnutella Klon, der unter der GPL steht und auf jedem Unix lauffähig ist. Die Linuxversion gibt es als RPM, DEB, und als TAR.GZ.
   </textblock>

<!-- *.* Kapitel -->
   <section>
	<heading>
GTK-Gnutella Installation
	</heading>

	<textblock>
Grundlage der Installation ist GTK+ (<ref lang="en" url="http://www.gtk.org">http://www.gtk.org</ref>) ab Version 1.2,
libxml <ref lang="en" url="http://www.libxml.org"> http://www.libxml.org
</ref> , eine bestehende Internetverbindung und XFree86.
	</textblock>

	<section>
	 <heading>
RPM Version
	 </heading>
	 <textblock>
	  <command><strong>rpm -i gtk-gnutella-0.91.0.rpm</strong></command>
	 </textblock>
	</section>


	<section>
	 <heading>
	  DEB Version
	 </heading>
	 <textblock>
	  <command><strong>dpkg -i gtk-gnutella_0.91.0-0</strong></command>
	 </textblock>
	</section>

	<section>
	 <heading>
TAR.GZ Version  
	 </heading>
	 <textblock>
Kopiere die Datei <command>gtk-gnutella-0.91.tar.gz</command> an eine geeignete
Stelle. Entpacke es mit <command> tar -xvzf
gtk-gnutella-0.91.tar.gz </command> , wechsle in das
entstandene Unterverzeichnis und führe
<command>./configure</command> aus, anschließend
<command>make</command>, <command>su</command> und <command>make
install</command>. Das Programm wird nach <command>/usr/local/bin</command>
kopiert.
	 </textblock>
	</section>
   </section>

<!-- *. Kapitel -->
   <section>
	<heading>
	 Verwendung des Programms GTK-Gnutella
	</heading>

	<textblock>
Über ein X-Terminal wechselt man in das Unterverzeichnis und
startet <command>./gtk-gnutella</command>. Nach dem Start wird
Verbindung mit dem Netzwerk aufgenommen. Im Menü config muss ein
Verzeichnis für nicht komplette und ein Verzeichnis für
komplett empfangende Dateien angegeben werden,
	</textblock>

	<image height="250">
	 <filename>GTK-Gnutella_Pfade.png</filename>
	 <title>Pfadangaben</title>
	</image>

	<textblock>
desweiteren natürlich ein Unterverzeichnis mit Ihren zum
Filesharing vorgesehenden Dateien.
	</textblock>

    <image height="250">
	 <filename>GTK-Gnutella_GeteilteOrdner.png</filename>
	 <title>Geteilte Ordner</title>
    </image>

   <textblock>
So jetzt können Sie in der
Suchmaske nach den gewünschten Dateien suchen.
  </textblock>

   </section>
  </section>
 </split>

<split>
  <section>
   <heading>
Nutzung der Clients
   </heading>

   <textblock>
Welche Dateien kann man bekommen? Wo es unter Napster nur möglich
war, <name>mp3</name> Dateien zu bekommen, ist es mit den moderneren
Programmen, wie den hier vorgestellten, möglich, alle Dateien zu
<strong>teilen</strong>. Darum sei hier auch gewarnt! Viren, Würmer und anderes
Getier treibt sich genauso herum wie manipulierte Dateien der
Musikbranche oder Videos mit falschen Titeln. Es ist bekannt, dass
proprietäre Programme den eigenen Rechner ausspionieren. Die hier
angesprochenen Programme sind Open Source, das heißt, offene
Quellen helfen, dies zu verhindern.
   </textblock>
  </section>
 </split>
</chapter>
