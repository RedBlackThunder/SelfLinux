<?xml version="1.0" encoding="iso-8859-1"?>

<chapter>
 <title>Doxygen Howto</title>

 <author>
  <name>Kim Kulling</name>
  <mailto>sir_kimmi@web.de</mailto>
 </author>

 <layout>
  <name>Florian Frank</name>
  <mailto>florian.frank@pingos.org</mailto>
 </layout>

 <license>LGPL</license>

 <index>doxygen</index>

 <split>
  <section>
   <heading>
Einleitung
   </heading>

   <textblock>
Um als Neueinsteiger in ein komplexes Projekt einsteigen zu können, ist eine
Dokumentation beziehungsweise ein Design-Dokument unabdingbar. Vor allem bei
OO-Projekten ist das zugrunde gelegte Datenmodell nur schwer aus dem Quellcode
zu extrahieren. Die Klassen-Hierarchie und das zu grunde gelegte Design lässt
sich nur mit viel Mühe aus dem Spagetti-Code herauslesen. Ausserdem steht man
vor dem Problem, dass neue Entwicker auch neue Erweiterungen beziehungsweise
Umorganisationen in der Klassenhierarchie vornehmen, diese im Design-Dokument
aber vergessen werden, zu dokumentieren. Um diese Probleme zu umschiffen, wäre
eine automatisch erstellte Dokumentation praktisch. An diesem Punkt setzt
<command>doxygen</command> an.
   </textblock>
  </section>

  <section>
   <heading>
Doxygen
   </heading>

   <textblock>
<command>doxygen</command> ist ein Tool, mit dem man Dokumentationen für <strong>C++</strong>, <strong>C</strong>, <strong>Java</strong>, <strong>IDL</strong> und <strong>C#</strong>
automatisch erstellen kann. Dabei steht <command>doxygen</command> under der <ref chapter="gpl_de">GPL</ref>, was dem
Anwender die Möglichkeit anbietet, direkt den Quellcode
bearbeiten zu können. <command>doxygen</command> wird unter Linux entwickelt, man kann es auch
unter <ref chapter="win_vs_linux">Windows-Systemen</ref> einsetzen. Dieses Howto beschäftigt sich zunächst einmal
mit der <ref chapter="was_ist_linux">Linux</ref>-Variante.
   </textblock>
  </section>

  <section>
   <heading>
Vorbereitungen für den Einsatz
   </heading>

   <textblock>
Im Quellcode hinterlassen Entwickler hoffentlich Kommentare, die den Code
lesbarer machen sollen. Was läge näher als diese Kommentare so aufzubereiten
beziehungsweise anzulegen, dass man aus dieser eine Dokumentation erzeugen kann.
Genau das ist das Prinzip von <command>doxygen</command>. Die Kommentare im Quellcode werden nach
einer gewissen Konvention bearbeitet und später von doxygen ausgelesen. Aus
diesen erstellt <command>doxygen</command> dann seine Dokumentation. Das Format der Dokumentation
wird mittels einer Konfigurationsdatei erzeugt, welche mittels
   </textblock>

   <shell>
    <user>
doxygen -g &lt;config-file&gt;
    </user>
   </shell>

   <textblock>
erzeugt wird. Nun wird eine Konfigurationsdatei erzeugt, welche eine Menge an
Konigurationsflags setzt, die momentan allerdings zum grössten Teil
uninteressant sind. Wichtig sind vor allem die folgenden Tags:
   </textblock>

   <file>
    <content>
PROJECT_NAME     = &lt;Name_des_Projektes&gt;
OUTPUT_DIRECTORY = &lt;Pfad_fuer_generierte_Doku&gt;
OUTPUT_LANGUAGE  = &lt;Sprache&gt;
INPUT            = &lt;Pfade_zu_den_Sourcen&gt;
FILE_PATTERNS    = &lt;Endung&gt; zum Beispiel .h,.cpp bei einem c++ Projekt
    </content>
   </file>

   <textblock>
Hat man die notwendigen Tags in der Konfigurationsdatei gesetzt, kann man die
Dokumentation mittels des Kommandos
   </textblock>

   <shell>
    <user>
doxygen &lt;Config-File&gt;
    </user>
   </shell>

   <textblock>
erzeugen. Unter <ref chapter="win_vs_linux">Windows</ref> nimmt man dazu die entsprechende grafische
Oberfläche.
   </textblock>
  </section>

  <section>
   <heading>
Doxygen-Tags
   </heading>

   <textblock>
Um die Kommentare von <command>doxygen</command> bearbeiten zu lassen, werden spezielle
Dokumentations-Blöcke im Quellcode gesetzt. Diese können folgende Formen haben:
   </textblock>

   <file>
    <content>
/**
 * ...Text...
 */

/*!
 * ...Text...
 */

/*!
   ...Text...
 */
    </content>
   </file>

   <textblock>
Diese Art und Weise der Kommentare ist vom C-Stil abgeleitet. Wer die C++
Kommentare bevorzugt, kann die folgenden speziellen Blöcke benutzen:
   </textblock>

   <file>
    <content>
///
/// ...Text
///

//!
//! ...text...
//!

///////////////////////////////////////////////////////
/// ...Text...
///////////////////////////////////////////////////////
    </content>
   </file>

   <textblock>
Zusätzlich ist es möglich, Kurzbeschreibungen (brief) zu setzen:
   </textblock>

   <file>
    <content>
/*!\brief Beschreibung
 *           geht hier weiter
 *
 * Detailierte Beschreinungen folgen hier
 */
    </content>
   </file>

   <textblock>
Eine andere Möglichkeit stellt das Folgende dar:
   </textblock>

   <file>
    <content>
/// Brief Beschreibung.
/** Detailierte beschreibung folgt nach dem Punkt. */
    </content>
   </file>

   <textblock>
Parameterbeschreibungen werden mit dem Tag <command>\param</command> eingeleitet:
   </textblock>

   <file>
    <content>
/// Eine Methode.
/*!
       Detailierte beschreibung der Funktionalität
  \sa Vater()
  \param pa1 Parameter 1
  \param pa2 Parameter 2
 */

 int sohn(int pa1, int pa2); //! Detailierte Beschreibung
    </content>
   </file>

   <textblock>
Einige weitere Tags:
   </textblock>

   <table>
    <pdf-column width="75"/>
    <pdf-column/>
    <tr>
     <td>
<command>\struct</command>
     </td>
     <td>
Dokumentation zu einem C-Strukt
     </td>
    </tr>
    <tr>
     <td>
<command>\union</command>
     </td>
     <td>
Dokumentation zu einer Union
     </td>
    </tr>
    <tr>
     <td>
<command>\enum</command>
     </td>
     <td>
Dokumentation zu einem Enumeration Typ
     </td>
    </tr>
    <tr>
     <td>
<command>\fn</command>
     </td>
     <td>
Dokumentation einer Funktion
     </td>
    </tr>
    <tr>
     <td>
<command>\var</command>
     </td>
     <td>
Dokumentation einer Variable
     </td>
    </tr>
    <tr>
     <td>
<command>\def</command>
     </td>
     <td>
Dokumentation eines #defines
     </td>
    </tr>
    <tr>
     <td>
<command>\file</command>
     </td>
     <td>
Dokumentation eines Files
     </td>
    </tr>
    <tr>
     <td>
<command>\namespace</command>
     </td>
     <td>
Dokumentation eines Namespaces
     </td>
    </tr>
   </table>
  </section>

  <section>
   <heading>
Abschliessende Bemerkungen
   </heading>

   <textblock>
Wer Fragen oder Anmerkungen zu diesem Mini-Howto hat, kann diese direkt an
<name email="sir_kimmi@gmx.de">Kim Kulling</name> senden.
   </textblock>
  </section>
 </split>
</chapter>
